//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.17 at 02:08:33 AM SGT 
//


package org.fixprotocol.fixml_5_0_sp2;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * NetworkCounterpartySystemStatusRequest can be found in Volume 1 of the
 * 						specification
 * 
 * <p>Java class for NetworkCounterpartySystemStatusRequest_message_t complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="NetworkCounterpartySystemStatusRequest_message_t"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.fixprotocol.org/FIXML-5-0-SP2}Abstract_message_t"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.fixprotocol.org/FIXML-5-0-SP2}NetworkCounterpartySystemStatusRequestElements"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attGroup ref="{http://www.fixprotocol.org/FIXML-5-0-SP2}NetworkCounterpartySystemStatusRequestAttributes"/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "NetworkCounterpartySystemStatusRequest_message_t", propOrder = {
    "cidReq"
})
public class NetworkCounterpartySystemStatusRequestMessageT
    extends AbstractMessageT
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "CIDReq")
    protected List<CompIDReqGrpBlockT> cidReq;
    @XmlAttribute(name = "NtwkReqTyp", required = true)
    protected BigInteger ntwkReqTyp;
    @XmlAttribute(name = "NtwkReqID", required = true)
    protected String ntwkReqID;

    /**
     * Gets the value of the cidReq property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the cidReq property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCIDReq().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CompIDReqGrpBlockT }
     * 
     * 
     */
    public List<CompIDReqGrpBlockT> getCIDReq() {
        if (cidReq == null) {
            cidReq = new ArrayList<CompIDReqGrpBlockT>();
        }
        return this.cidReq;
    }

    /**
     * Gets the value of the ntwkReqTyp property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNtwkReqTyp() {
        return ntwkReqTyp;
    }

    /**
     * Sets the value of the ntwkReqTyp property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNtwkReqTyp(BigInteger value) {
        this.ntwkReqTyp = value;
    }

    /**
     * Gets the value of the ntwkReqID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNtwkReqID() {
        return ntwkReqID;
    }

    /**
     * Sets the value of the ntwkReqID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNtwkReqID(String value) {
        this.ntwkReqID = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof NetworkCounterpartySystemStatusRequestMessageT)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final NetworkCounterpartySystemStatusRequestMessageT that = ((NetworkCounterpartySystemStatusRequestMessageT) object);
        {
            List<CompIDReqGrpBlockT> lhsCIDReq;
            lhsCIDReq = (((this.cidReq!= null)&&(!this.cidReq.isEmpty()))?this.getCIDReq():null);
            List<CompIDReqGrpBlockT> rhsCIDReq;
            rhsCIDReq = (((that.cidReq!= null)&&(!that.cidReq.isEmpty()))?that.getCIDReq():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cidReq", lhsCIDReq), LocatorUtils.property(thatLocator, "cidReq", rhsCIDReq), lhsCIDReq, rhsCIDReq)) {
                return false;
            }
        }
        {
            BigInteger lhsNtwkReqTyp;
            lhsNtwkReqTyp = this.getNtwkReqTyp();
            BigInteger rhsNtwkReqTyp;
            rhsNtwkReqTyp = that.getNtwkReqTyp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ntwkReqTyp", lhsNtwkReqTyp), LocatorUtils.property(thatLocator, "ntwkReqTyp", rhsNtwkReqTyp), lhsNtwkReqTyp, rhsNtwkReqTyp)) {
                return false;
            }
        }
        {
            String lhsNtwkReqID;
            lhsNtwkReqID = this.getNtwkReqID();
            String rhsNtwkReqID;
            rhsNtwkReqID = that.getNtwkReqID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ntwkReqID", lhsNtwkReqID), LocatorUtils.property(thatLocator, "ntwkReqID", rhsNtwkReqID), lhsNtwkReqID, rhsNtwkReqID)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<CompIDReqGrpBlockT> theCIDReq;
            theCIDReq = (((this.cidReq!= null)&&(!this.cidReq.isEmpty()))?this.getCIDReq():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cidReq", theCIDReq), currentHashCode, theCIDReq);
        }
        {
            BigInteger theNtwkReqTyp;
            theNtwkReqTyp = this.getNtwkReqTyp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ntwkReqTyp", theNtwkReqTyp), currentHashCode, theNtwkReqTyp);
        }
        {
            String theNtwkReqID;
            theNtwkReqID = this.getNtwkReqID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ntwkReqID", theNtwkReqID), currentHashCode, theNtwkReqID);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            List<CompIDReqGrpBlockT> theCIDReq;
            theCIDReq = (((this.cidReq!= null)&&(!this.cidReq.isEmpty()))?this.getCIDReq():null);
            strategy.appendField(locator, this, "cidReq", buffer, theCIDReq);
        }
        {
            BigInteger theNtwkReqTyp;
            theNtwkReqTyp = this.getNtwkReqTyp();
            strategy.appendField(locator, this, "ntwkReqTyp", buffer, theNtwkReqTyp);
        }
        {
            String theNtwkReqID;
            theNtwkReqID = this.getNtwkReqID();
            strategy.appendField(locator, this, "ntwkReqID", buffer, theNtwkReqID);
        }
        return buffer;
    }

}
