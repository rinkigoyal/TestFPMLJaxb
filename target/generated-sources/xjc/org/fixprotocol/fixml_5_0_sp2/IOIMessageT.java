//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.17 at 02:08:33 AM SGT 
//


package org.fixprotocol.fixml_5_0_sp2;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * IOI can be found in Volume 3 of the
 * 						specification
 * 
 * <p>Java class for IOI_message_t complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="IOI_message_t"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.fixprotocol.org/FIXML-5-0-SP2}Abstract_message_t"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.fixprotocol.org/FIXML-5-0-SP2}IOIElements"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attGroup ref="{http://www.fixprotocol.org/FIXML-5-0-SP2}IOIAttributes"/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "IOI_message_t", propOrder = {
    "applSeqCtrl",
    "instrmt",
    "pty",
    "finDetls",
    "undly",
    "ordQty",
    "stip",
    "ioi",
    "qual",
    "rtg",
    "sprdBnchmkCurve",
    "yield"
})
public class IOIMessageT
    extends AbstractMessageT
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "ApplSeqCtrl")
    protected ApplicationSequenceControlBlockT applSeqCtrl;
    @XmlElement(name = "Instrmt", required = true)
    protected InstrumentBlockT instrmt;
    @XmlElement(name = "Pty")
    protected List<PartiesBlockT> pty;
    @XmlElement(name = "FinDetls")
    protected FinancingDetailsBlockT finDetls;
    @XmlElement(name = "Undly")
    protected List<UndInstrmtGrpBlockT> undly;
    @XmlElement(name = "OrdQty")
    protected OrderQtyDataBlockT ordQty;
    @XmlElement(name = "Stip")
    protected List<StipulationsBlockT> stip;
    @XmlElement(name = "IOI")
    protected List<InstrmtLegIOIGrpBlockT> ioi;
    @XmlElement(name = "Qual")
    protected List<IOIQualGrpBlockT> qual;
    @XmlElement(name = "Rtg")
    protected List<RoutingGrpBlockT> rtg;
    @XmlElement(name = "SprdBnchmkCurve")
    protected SpreadOrBenchmarkCurveDataBlockT sprdBnchmkCurve;
    @XmlElement(name = "Yield")
    protected YieldDataBlockT yield;
    @XmlAttribute(name = "ID", required = true)
    protected String id;
    @XmlAttribute(name = "TransTyp", required = true)
    protected IOITransTypeEnumT transTyp;
    @XmlAttribute(name = "RefID")
    protected String refID;
    @XmlAttribute(name = "Side", required = true)
    protected String side;
    @XmlAttribute(name = "QtyTyp")
    protected BigInteger qtyTyp;
    @XmlAttribute(name = "Qty", required = true)
    protected String qty;
    @XmlAttribute(name = "Ccy")
    protected String ccy;
    @XmlAttribute(name = "PxTyp")
    protected BigInteger pxTyp;
    @XmlAttribute(name = "Px")
    protected BigDecimal px;
    @XmlAttribute(name = "ValidUntilTm")
    protected XMLGregorianCalendar validUntilTm;
    @XmlAttribute(name = "QltyInd")
    protected IOIQltyIndEnumT qltyInd;
    @XmlAttribute(name = "NatFlag")
    protected IOINaturalFlagEnumT natFlag;
    @XmlAttribute(name = "Txt")
    protected String txt;
    @XmlAttribute(name = "EncTxtLen")
    protected BigInteger encTxtLen;
    @XmlAttribute(name = "EncTxt")
    protected String encTxt;
    @XmlAttribute(name = "TxnTm")
    protected XMLGregorianCalendar txnTm;
    @XmlAttribute(name = "URL")
    protected String url;

    /**
     * Gets the value of the applSeqCtrl property.
     * 
     * @return
     *     possible object is
     *     {@link ApplicationSequenceControlBlockT }
     *     
     */
    public ApplicationSequenceControlBlockT getApplSeqCtrl() {
        return applSeqCtrl;
    }

    /**
     * Sets the value of the applSeqCtrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link ApplicationSequenceControlBlockT }
     *     
     */
    public void setApplSeqCtrl(ApplicationSequenceControlBlockT value) {
        this.applSeqCtrl = value;
    }

    /**
     * Gets the value of the instrmt property.
     * 
     * @return
     *     possible object is
     *     {@link InstrumentBlockT }
     *     
     */
    public InstrumentBlockT getInstrmt() {
        return instrmt;
    }

    /**
     * Sets the value of the instrmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link InstrumentBlockT }
     *     
     */
    public void setInstrmt(InstrumentBlockT value) {
        this.instrmt = value;
    }

    /**
     * Gets the value of the pty property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the pty property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPty().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PartiesBlockT }
     * 
     * 
     */
    public List<PartiesBlockT> getPty() {
        if (pty == null) {
            pty = new ArrayList<PartiesBlockT>();
        }
        return this.pty;
    }

    /**
     * Gets the value of the finDetls property.
     * 
     * @return
     *     possible object is
     *     {@link FinancingDetailsBlockT }
     *     
     */
    public FinancingDetailsBlockT getFinDetls() {
        return finDetls;
    }

    /**
     * Sets the value of the finDetls property.
     * 
     * @param value
     *     allowed object is
     *     {@link FinancingDetailsBlockT }
     *     
     */
    public void setFinDetls(FinancingDetailsBlockT value) {
        this.finDetls = value;
    }

    /**
     * Gets the value of the undly property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the undly property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUndly().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UndInstrmtGrpBlockT }
     * 
     * 
     */
    public List<UndInstrmtGrpBlockT> getUndly() {
        if (undly == null) {
            undly = new ArrayList<UndInstrmtGrpBlockT>();
        }
        return this.undly;
    }

    /**
     * Gets the value of the ordQty property.
     * 
     * @return
     *     possible object is
     *     {@link OrderQtyDataBlockT }
     *     
     */
    public OrderQtyDataBlockT getOrdQty() {
        return ordQty;
    }

    /**
     * Sets the value of the ordQty property.
     * 
     * @param value
     *     allowed object is
     *     {@link OrderQtyDataBlockT }
     *     
     */
    public void setOrdQty(OrderQtyDataBlockT value) {
        this.ordQty = value;
    }

    /**
     * Gets the value of the stip property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the stip property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getStip().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link StipulationsBlockT }
     * 
     * 
     */
    public List<StipulationsBlockT> getStip() {
        if (stip == null) {
            stip = new ArrayList<StipulationsBlockT>();
        }
        return this.stip;
    }

    /**
     * Gets the value of the ioi property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the ioi property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIOI().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InstrmtLegIOIGrpBlockT }
     * 
     * 
     */
    public List<InstrmtLegIOIGrpBlockT> getIOI() {
        if (ioi == null) {
            ioi = new ArrayList<InstrmtLegIOIGrpBlockT>();
        }
        return this.ioi;
    }

    /**
     * Gets the value of the qual property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the qual property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getQual().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link IOIQualGrpBlockT }
     * 
     * 
     */
    public List<IOIQualGrpBlockT> getQual() {
        if (qual == null) {
            qual = new ArrayList<IOIQualGrpBlockT>();
        }
        return this.qual;
    }

    /**
     * Gets the value of the rtg property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the rtg property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRtg().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RoutingGrpBlockT }
     * 
     * 
     */
    public List<RoutingGrpBlockT> getRtg() {
        if (rtg == null) {
            rtg = new ArrayList<RoutingGrpBlockT>();
        }
        return this.rtg;
    }

    /**
     * Gets the value of the sprdBnchmkCurve property.
     * 
     * @return
     *     possible object is
     *     {@link SpreadOrBenchmarkCurveDataBlockT }
     *     
     */
    public SpreadOrBenchmarkCurveDataBlockT getSprdBnchmkCurve() {
        return sprdBnchmkCurve;
    }

    /**
     * Sets the value of the sprdBnchmkCurve property.
     * 
     * @param value
     *     allowed object is
     *     {@link SpreadOrBenchmarkCurveDataBlockT }
     *     
     */
    public void setSprdBnchmkCurve(SpreadOrBenchmarkCurveDataBlockT value) {
        this.sprdBnchmkCurve = value;
    }

    /**
     * Gets the value of the yield property.
     * 
     * @return
     *     possible object is
     *     {@link YieldDataBlockT }
     *     
     */
    public YieldDataBlockT getYield() {
        return yield;
    }

    /**
     * Sets the value of the yield property.
     * 
     * @param value
     *     allowed object is
     *     {@link YieldDataBlockT }
     *     
     */
    public void setYield(YieldDataBlockT value) {
        this.yield = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getID() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setID(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the transTyp property.
     * 
     * @return
     *     possible object is
     *     {@link IOITransTypeEnumT }
     *     
     */
    public IOITransTypeEnumT getTransTyp() {
        return transTyp;
    }

    /**
     * Sets the value of the transTyp property.
     * 
     * @param value
     *     allowed object is
     *     {@link IOITransTypeEnumT }
     *     
     */
    public void setTransTyp(IOITransTypeEnumT value) {
        this.transTyp = value;
    }

    /**
     * Gets the value of the refID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRefID() {
        return refID;
    }

    /**
     * Sets the value of the refID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRefID(String value) {
        this.refID = value;
    }

    /**
     * Gets the value of the side property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSide() {
        return side;
    }

    /**
     * Sets the value of the side property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSide(String value) {
        this.side = value;
    }

    /**
     * Gets the value of the qtyTyp property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getQtyTyp() {
        return qtyTyp;
    }

    /**
     * Sets the value of the qtyTyp property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setQtyTyp(BigInteger value) {
        this.qtyTyp = value;
    }

    /**
     * Gets the value of the qty property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getQty() {
        return qty;
    }

    /**
     * Sets the value of the qty property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setQty(String value) {
        this.qty = value;
    }

    /**
     * Gets the value of the ccy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCcy() {
        return ccy;
    }

    /**
     * Sets the value of the ccy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCcy(String value) {
        this.ccy = value;
    }

    /**
     * Gets the value of the pxTyp property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getPxTyp() {
        return pxTyp;
    }

    /**
     * Sets the value of the pxTyp property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setPxTyp(BigInteger value) {
        this.pxTyp = value;
    }

    /**
     * Gets the value of the px property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getPx() {
        return px;
    }

    /**
     * Sets the value of the px property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setPx(BigDecimal value) {
        this.px = value;
    }

    /**
     * Gets the value of the validUntilTm property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getValidUntilTm() {
        return validUntilTm;
    }

    /**
     * Sets the value of the validUntilTm property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setValidUntilTm(XMLGregorianCalendar value) {
        this.validUntilTm = value;
    }

    /**
     * Gets the value of the qltyInd property.
     * 
     * @return
     *     possible object is
     *     {@link IOIQltyIndEnumT }
     *     
     */
    public IOIQltyIndEnumT getQltyInd() {
        return qltyInd;
    }

    /**
     * Sets the value of the qltyInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link IOIQltyIndEnumT }
     *     
     */
    public void setQltyInd(IOIQltyIndEnumT value) {
        this.qltyInd = value;
    }

    /**
     * Gets the value of the natFlag property.
     * 
     * @return
     *     possible object is
     *     {@link IOINaturalFlagEnumT }
     *     
     */
    public IOINaturalFlagEnumT getNatFlag() {
        return natFlag;
    }

    /**
     * Sets the value of the natFlag property.
     * 
     * @param value
     *     allowed object is
     *     {@link IOINaturalFlagEnumT }
     *     
     */
    public void setNatFlag(IOINaturalFlagEnumT value) {
        this.natFlag = value;
    }

    /**
     * Gets the value of the txt property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTxt() {
        return txt;
    }

    /**
     * Sets the value of the txt property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTxt(String value) {
        this.txt = value;
    }

    /**
     * Gets the value of the encTxtLen property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getEncTxtLen() {
        return encTxtLen;
    }

    /**
     * Sets the value of the encTxtLen property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setEncTxtLen(BigInteger value) {
        this.encTxtLen = value;
    }

    /**
     * Gets the value of the encTxt property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEncTxt() {
        return encTxt;
    }

    /**
     * Sets the value of the encTxt property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEncTxt(String value) {
        this.encTxt = value;
    }

    /**
     * Gets the value of the txnTm property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getTxnTm() {
        return txnTm;
    }

    /**
     * Sets the value of the txnTm property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setTxnTm(XMLGregorianCalendar value) {
        this.txnTm = value;
    }

    /**
     * Gets the value of the url property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getURL() {
        return url;
    }

    /**
     * Sets the value of the url property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setURL(String value) {
        this.url = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof IOIMessageT)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final IOIMessageT that = ((IOIMessageT) object);
        {
            ApplicationSequenceControlBlockT lhsApplSeqCtrl;
            lhsApplSeqCtrl = this.getApplSeqCtrl();
            ApplicationSequenceControlBlockT rhsApplSeqCtrl;
            rhsApplSeqCtrl = that.getApplSeqCtrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "applSeqCtrl", lhsApplSeqCtrl), LocatorUtils.property(thatLocator, "applSeqCtrl", rhsApplSeqCtrl), lhsApplSeqCtrl, rhsApplSeqCtrl)) {
                return false;
            }
        }
        {
            InstrumentBlockT lhsInstrmt;
            lhsInstrmt = this.getInstrmt();
            InstrumentBlockT rhsInstrmt;
            rhsInstrmt = that.getInstrmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "instrmt", lhsInstrmt), LocatorUtils.property(thatLocator, "instrmt", rhsInstrmt), lhsInstrmt, rhsInstrmt)) {
                return false;
            }
        }
        {
            List<PartiesBlockT> lhsPty;
            lhsPty = (((this.pty!= null)&&(!this.pty.isEmpty()))?this.getPty():null);
            List<PartiesBlockT> rhsPty;
            rhsPty = (((that.pty!= null)&&(!that.pty.isEmpty()))?that.getPty():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pty", lhsPty), LocatorUtils.property(thatLocator, "pty", rhsPty), lhsPty, rhsPty)) {
                return false;
            }
        }
        {
            FinancingDetailsBlockT lhsFinDetls;
            lhsFinDetls = this.getFinDetls();
            FinancingDetailsBlockT rhsFinDetls;
            rhsFinDetls = that.getFinDetls();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "finDetls", lhsFinDetls), LocatorUtils.property(thatLocator, "finDetls", rhsFinDetls), lhsFinDetls, rhsFinDetls)) {
                return false;
            }
        }
        {
            List<UndInstrmtGrpBlockT> lhsUndly;
            lhsUndly = (((this.undly!= null)&&(!this.undly.isEmpty()))?this.getUndly():null);
            List<UndInstrmtGrpBlockT> rhsUndly;
            rhsUndly = (((that.undly!= null)&&(!that.undly.isEmpty()))?that.getUndly():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "undly", lhsUndly), LocatorUtils.property(thatLocator, "undly", rhsUndly), lhsUndly, rhsUndly)) {
                return false;
            }
        }
        {
            OrderQtyDataBlockT lhsOrdQty;
            lhsOrdQty = this.getOrdQty();
            OrderQtyDataBlockT rhsOrdQty;
            rhsOrdQty = that.getOrdQty();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ordQty", lhsOrdQty), LocatorUtils.property(thatLocator, "ordQty", rhsOrdQty), lhsOrdQty, rhsOrdQty)) {
                return false;
            }
        }
        {
            List<StipulationsBlockT> lhsStip;
            lhsStip = (((this.stip!= null)&&(!this.stip.isEmpty()))?this.getStip():null);
            List<StipulationsBlockT> rhsStip;
            rhsStip = (((that.stip!= null)&&(!that.stip.isEmpty()))?that.getStip():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "stip", lhsStip), LocatorUtils.property(thatLocator, "stip", rhsStip), lhsStip, rhsStip)) {
                return false;
            }
        }
        {
            List<InstrmtLegIOIGrpBlockT> lhsIOI;
            lhsIOI = (((this.ioi!= null)&&(!this.ioi.isEmpty()))?this.getIOI():null);
            List<InstrmtLegIOIGrpBlockT> rhsIOI;
            rhsIOI = (((that.ioi!= null)&&(!that.ioi.isEmpty()))?that.getIOI():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ioi", lhsIOI), LocatorUtils.property(thatLocator, "ioi", rhsIOI), lhsIOI, rhsIOI)) {
                return false;
            }
        }
        {
            List<IOIQualGrpBlockT> lhsQual;
            lhsQual = (((this.qual!= null)&&(!this.qual.isEmpty()))?this.getQual():null);
            List<IOIQualGrpBlockT> rhsQual;
            rhsQual = (((that.qual!= null)&&(!that.qual.isEmpty()))?that.getQual():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "qual", lhsQual), LocatorUtils.property(thatLocator, "qual", rhsQual), lhsQual, rhsQual)) {
                return false;
            }
        }
        {
            List<RoutingGrpBlockT> lhsRtg;
            lhsRtg = (((this.rtg!= null)&&(!this.rtg.isEmpty()))?this.getRtg():null);
            List<RoutingGrpBlockT> rhsRtg;
            rhsRtg = (((that.rtg!= null)&&(!that.rtg.isEmpty()))?that.getRtg():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rtg", lhsRtg), LocatorUtils.property(thatLocator, "rtg", rhsRtg), lhsRtg, rhsRtg)) {
                return false;
            }
        }
        {
            SpreadOrBenchmarkCurveDataBlockT lhsSprdBnchmkCurve;
            lhsSprdBnchmkCurve = this.getSprdBnchmkCurve();
            SpreadOrBenchmarkCurveDataBlockT rhsSprdBnchmkCurve;
            rhsSprdBnchmkCurve = that.getSprdBnchmkCurve();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sprdBnchmkCurve", lhsSprdBnchmkCurve), LocatorUtils.property(thatLocator, "sprdBnchmkCurve", rhsSprdBnchmkCurve), lhsSprdBnchmkCurve, rhsSprdBnchmkCurve)) {
                return false;
            }
        }
        {
            YieldDataBlockT lhsYield;
            lhsYield = this.getYield();
            YieldDataBlockT rhsYield;
            rhsYield = that.getYield();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "yield", lhsYield), LocatorUtils.property(thatLocator, "yield", rhsYield), lhsYield, rhsYield)) {
                return false;
            }
        }
        {
            String lhsID;
            lhsID = this.getID();
            String rhsID;
            rhsID = that.getID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsID), LocatorUtils.property(thatLocator, "id", rhsID), lhsID, rhsID)) {
                return false;
            }
        }
        {
            IOITransTypeEnumT lhsTransTyp;
            lhsTransTyp = this.getTransTyp();
            IOITransTypeEnumT rhsTransTyp;
            rhsTransTyp = that.getTransTyp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transTyp", lhsTransTyp), LocatorUtils.property(thatLocator, "transTyp", rhsTransTyp), lhsTransTyp, rhsTransTyp)) {
                return false;
            }
        }
        {
            String lhsRefID;
            lhsRefID = this.getRefID();
            String rhsRefID;
            rhsRefID = that.getRefID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "refID", lhsRefID), LocatorUtils.property(thatLocator, "refID", rhsRefID), lhsRefID, rhsRefID)) {
                return false;
            }
        }
        {
            String lhsSide;
            lhsSide = this.getSide();
            String rhsSide;
            rhsSide = that.getSide();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "side", lhsSide), LocatorUtils.property(thatLocator, "side", rhsSide), lhsSide, rhsSide)) {
                return false;
            }
        }
        {
            BigInteger lhsQtyTyp;
            lhsQtyTyp = this.getQtyTyp();
            BigInteger rhsQtyTyp;
            rhsQtyTyp = that.getQtyTyp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "qtyTyp", lhsQtyTyp), LocatorUtils.property(thatLocator, "qtyTyp", rhsQtyTyp), lhsQtyTyp, rhsQtyTyp)) {
                return false;
            }
        }
        {
            String lhsQty;
            lhsQty = this.getQty();
            String rhsQty;
            rhsQty = that.getQty();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "qty", lhsQty), LocatorUtils.property(thatLocator, "qty", rhsQty), lhsQty, rhsQty)) {
                return false;
            }
        }
        {
            String lhsCcy;
            lhsCcy = this.getCcy();
            String rhsCcy;
            rhsCcy = that.getCcy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ccy", lhsCcy), LocatorUtils.property(thatLocator, "ccy", rhsCcy), lhsCcy, rhsCcy)) {
                return false;
            }
        }
        {
            BigInteger lhsPxTyp;
            lhsPxTyp = this.getPxTyp();
            BigInteger rhsPxTyp;
            rhsPxTyp = that.getPxTyp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pxTyp", lhsPxTyp), LocatorUtils.property(thatLocator, "pxTyp", rhsPxTyp), lhsPxTyp, rhsPxTyp)) {
                return false;
            }
        }
        {
            BigDecimal lhsPx;
            lhsPx = this.getPx();
            BigDecimal rhsPx;
            rhsPx = that.getPx();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "px", lhsPx), LocatorUtils.property(thatLocator, "px", rhsPx), lhsPx, rhsPx)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsValidUntilTm;
            lhsValidUntilTm = this.getValidUntilTm();
            XMLGregorianCalendar rhsValidUntilTm;
            rhsValidUntilTm = that.getValidUntilTm();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "validUntilTm", lhsValidUntilTm), LocatorUtils.property(thatLocator, "validUntilTm", rhsValidUntilTm), lhsValidUntilTm, rhsValidUntilTm)) {
                return false;
            }
        }
        {
            IOIQltyIndEnumT lhsQltyInd;
            lhsQltyInd = this.getQltyInd();
            IOIQltyIndEnumT rhsQltyInd;
            rhsQltyInd = that.getQltyInd();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "qltyInd", lhsQltyInd), LocatorUtils.property(thatLocator, "qltyInd", rhsQltyInd), lhsQltyInd, rhsQltyInd)) {
                return false;
            }
        }
        {
            IOINaturalFlagEnumT lhsNatFlag;
            lhsNatFlag = this.getNatFlag();
            IOINaturalFlagEnumT rhsNatFlag;
            rhsNatFlag = that.getNatFlag();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "natFlag", lhsNatFlag), LocatorUtils.property(thatLocator, "natFlag", rhsNatFlag), lhsNatFlag, rhsNatFlag)) {
                return false;
            }
        }
        {
            String lhsTxt;
            lhsTxt = this.getTxt();
            String rhsTxt;
            rhsTxt = that.getTxt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "txt", lhsTxt), LocatorUtils.property(thatLocator, "txt", rhsTxt), lhsTxt, rhsTxt)) {
                return false;
            }
        }
        {
            BigInteger lhsEncTxtLen;
            lhsEncTxtLen = this.getEncTxtLen();
            BigInteger rhsEncTxtLen;
            rhsEncTxtLen = that.getEncTxtLen();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "encTxtLen", lhsEncTxtLen), LocatorUtils.property(thatLocator, "encTxtLen", rhsEncTxtLen), lhsEncTxtLen, rhsEncTxtLen)) {
                return false;
            }
        }
        {
            String lhsEncTxt;
            lhsEncTxt = this.getEncTxt();
            String rhsEncTxt;
            rhsEncTxt = that.getEncTxt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "encTxt", lhsEncTxt), LocatorUtils.property(thatLocator, "encTxt", rhsEncTxt), lhsEncTxt, rhsEncTxt)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsTxnTm;
            lhsTxnTm = this.getTxnTm();
            XMLGregorianCalendar rhsTxnTm;
            rhsTxnTm = that.getTxnTm();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "txnTm", lhsTxnTm), LocatorUtils.property(thatLocator, "txnTm", rhsTxnTm), lhsTxnTm, rhsTxnTm)) {
                return false;
            }
        }
        {
            String lhsURL;
            lhsURL = this.getURL();
            String rhsURL;
            rhsURL = that.getURL();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "url", lhsURL), LocatorUtils.property(thatLocator, "url", rhsURL), lhsURL, rhsURL)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            ApplicationSequenceControlBlockT theApplSeqCtrl;
            theApplSeqCtrl = this.getApplSeqCtrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "applSeqCtrl", theApplSeqCtrl), currentHashCode, theApplSeqCtrl);
        }
        {
            InstrumentBlockT theInstrmt;
            theInstrmt = this.getInstrmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "instrmt", theInstrmt), currentHashCode, theInstrmt);
        }
        {
            List<PartiesBlockT> thePty;
            thePty = (((this.pty!= null)&&(!this.pty.isEmpty()))?this.getPty():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pty", thePty), currentHashCode, thePty);
        }
        {
            FinancingDetailsBlockT theFinDetls;
            theFinDetls = this.getFinDetls();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "finDetls", theFinDetls), currentHashCode, theFinDetls);
        }
        {
            List<UndInstrmtGrpBlockT> theUndly;
            theUndly = (((this.undly!= null)&&(!this.undly.isEmpty()))?this.getUndly():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "undly", theUndly), currentHashCode, theUndly);
        }
        {
            OrderQtyDataBlockT theOrdQty;
            theOrdQty = this.getOrdQty();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ordQty", theOrdQty), currentHashCode, theOrdQty);
        }
        {
            List<StipulationsBlockT> theStip;
            theStip = (((this.stip!= null)&&(!this.stip.isEmpty()))?this.getStip():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "stip", theStip), currentHashCode, theStip);
        }
        {
            List<InstrmtLegIOIGrpBlockT> theIOI;
            theIOI = (((this.ioi!= null)&&(!this.ioi.isEmpty()))?this.getIOI():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ioi", theIOI), currentHashCode, theIOI);
        }
        {
            List<IOIQualGrpBlockT> theQual;
            theQual = (((this.qual!= null)&&(!this.qual.isEmpty()))?this.getQual():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "qual", theQual), currentHashCode, theQual);
        }
        {
            List<RoutingGrpBlockT> theRtg;
            theRtg = (((this.rtg!= null)&&(!this.rtg.isEmpty()))?this.getRtg():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rtg", theRtg), currentHashCode, theRtg);
        }
        {
            SpreadOrBenchmarkCurveDataBlockT theSprdBnchmkCurve;
            theSprdBnchmkCurve = this.getSprdBnchmkCurve();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sprdBnchmkCurve", theSprdBnchmkCurve), currentHashCode, theSprdBnchmkCurve);
        }
        {
            YieldDataBlockT theYield;
            theYield = this.getYield();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "yield", theYield), currentHashCode, theYield);
        }
        {
            String theID;
            theID = this.getID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theID), currentHashCode, theID);
        }
        {
            IOITransTypeEnumT theTransTyp;
            theTransTyp = this.getTransTyp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transTyp", theTransTyp), currentHashCode, theTransTyp);
        }
        {
            String theRefID;
            theRefID = this.getRefID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refID", theRefID), currentHashCode, theRefID);
        }
        {
            String theSide;
            theSide = this.getSide();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "side", theSide), currentHashCode, theSide);
        }
        {
            BigInteger theQtyTyp;
            theQtyTyp = this.getQtyTyp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "qtyTyp", theQtyTyp), currentHashCode, theQtyTyp);
        }
        {
            String theQty;
            theQty = this.getQty();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "qty", theQty), currentHashCode, theQty);
        }
        {
            String theCcy;
            theCcy = this.getCcy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ccy", theCcy), currentHashCode, theCcy);
        }
        {
            BigInteger thePxTyp;
            thePxTyp = this.getPxTyp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pxTyp", thePxTyp), currentHashCode, thePxTyp);
        }
        {
            BigDecimal thePx;
            thePx = this.getPx();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "px", thePx), currentHashCode, thePx);
        }
        {
            XMLGregorianCalendar theValidUntilTm;
            theValidUntilTm = this.getValidUntilTm();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "validUntilTm", theValidUntilTm), currentHashCode, theValidUntilTm);
        }
        {
            IOIQltyIndEnumT theQltyInd;
            theQltyInd = this.getQltyInd();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "qltyInd", theQltyInd), currentHashCode, theQltyInd);
        }
        {
            IOINaturalFlagEnumT theNatFlag;
            theNatFlag = this.getNatFlag();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "natFlag", theNatFlag), currentHashCode, theNatFlag);
        }
        {
            String theTxt;
            theTxt = this.getTxt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "txt", theTxt), currentHashCode, theTxt);
        }
        {
            BigInteger theEncTxtLen;
            theEncTxtLen = this.getEncTxtLen();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "encTxtLen", theEncTxtLen), currentHashCode, theEncTxtLen);
        }
        {
            String theEncTxt;
            theEncTxt = this.getEncTxt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "encTxt", theEncTxt), currentHashCode, theEncTxt);
        }
        {
            XMLGregorianCalendar theTxnTm;
            theTxnTm = this.getTxnTm();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "txnTm", theTxnTm), currentHashCode, theTxnTm);
        }
        {
            String theURL;
            theURL = this.getURL();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "url", theURL), currentHashCode, theURL);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            ApplicationSequenceControlBlockT theApplSeqCtrl;
            theApplSeqCtrl = this.getApplSeqCtrl();
            strategy.appendField(locator, this, "applSeqCtrl", buffer, theApplSeqCtrl);
        }
        {
            InstrumentBlockT theInstrmt;
            theInstrmt = this.getInstrmt();
            strategy.appendField(locator, this, "instrmt", buffer, theInstrmt);
        }
        {
            List<PartiesBlockT> thePty;
            thePty = (((this.pty!= null)&&(!this.pty.isEmpty()))?this.getPty():null);
            strategy.appendField(locator, this, "pty", buffer, thePty);
        }
        {
            FinancingDetailsBlockT theFinDetls;
            theFinDetls = this.getFinDetls();
            strategy.appendField(locator, this, "finDetls", buffer, theFinDetls);
        }
        {
            List<UndInstrmtGrpBlockT> theUndly;
            theUndly = (((this.undly!= null)&&(!this.undly.isEmpty()))?this.getUndly():null);
            strategy.appendField(locator, this, "undly", buffer, theUndly);
        }
        {
            OrderQtyDataBlockT theOrdQty;
            theOrdQty = this.getOrdQty();
            strategy.appendField(locator, this, "ordQty", buffer, theOrdQty);
        }
        {
            List<StipulationsBlockT> theStip;
            theStip = (((this.stip!= null)&&(!this.stip.isEmpty()))?this.getStip():null);
            strategy.appendField(locator, this, "stip", buffer, theStip);
        }
        {
            List<InstrmtLegIOIGrpBlockT> theIOI;
            theIOI = (((this.ioi!= null)&&(!this.ioi.isEmpty()))?this.getIOI():null);
            strategy.appendField(locator, this, "ioi", buffer, theIOI);
        }
        {
            List<IOIQualGrpBlockT> theQual;
            theQual = (((this.qual!= null)&&(!this.qual.isEmpty()))?this.getQual():null);
            strategy.appendField(locator, this, "qual", buffer, theQual);
        }
        {
            List<RoutingGrpBlockT> theRtg;
            theRtg = (((this.rtg!= null)&&(!this.rtg.isEmpty()))?this.getRtg():null);
            strategy.appendField(locator, this, "rtg", buffer, theRtg);
        }
        {
            SpreadOrBenchmarkCurveDataBlockT theSprdBnchmkCurve;
            theSprdBnchmkCurve = this.getSprdBnchmkCurve();
            strategy.appendField(locator, this, "sprdBnchmkCurve", buffer, theSprdBnchmkCurve);
        }
        {
            YieldDataBlockT theYield;
            theYield = this.getYield();
            strategy.appendField(locator, this, "yield", buffer, theYield);
        }
        {
            String theID;
            theID = this.getID();
            strategy.appendField(locator, this, "id", buffer, theID);
        }
        {
            IOITransTypeEnumT theTransTyp;
            theTransTyp = this.getTransTyp();
            strategy.appendField(locator, this, "transTyp", buffer, theTransTyp);
        }
        {
            String theRefID;
            theRefID = this.getRefID();
            strategy.appendField(locator, this, "refID", buffer, theRefID);
        }
        {
            String theSide;
            theSide = this.getSide();
            strategy.appendField(locator, this, "side", buffer, theSide);
        }
        {
            BigInteger theQtyTyp;
            theQtyTyp = this.getQtyTyp();
            strategy.appendField(locator, this, "qtyTyp", buffer, theQtyTyp);
        }
        {
            String theQty;
            theQty = this.getQty();
            strategy.appendField(locator, this, "qty", buffer, theQty);
        }
        {
            String theCcy;
            theCcy = this.getCcy();
            strategy.appendField(locator, this, "ccy", buffer, theCcy);
        }
        {
            BigInteger thePxTyp;
            thePxTyp = this.getPxTyp();
            strategy.appendField(locator, this, "pxTyp", buffer, thePxTyp);
        }
        {
            BigDecimal thePx;
            thePx = this.getPx();
            strategy.appendField(locator, this, "px", buffer, thePx);
        }
        {
            XMLGregorianCalendar theValidUntilTm;
            theValidUntilTm = this.getValidUntilTm();
            strategy.appendField(locator, this, "validUntilTm", buffer, theValidUntilTm);
        }
        {
            IOIQltyIndEnumT theQltyInd;
            theQltyInd = this.getQltyInd();
            strategy.appendField(locator, this, "qltyInd", buffer, theQltyInd);
        }
        {
            IOINaturalFlagEnumT theNatFlag;
            theNatFlag = this.getNatFlag();
            strategy.appendField(locator, this, "natFlag", buffer, theNatFlag);
        }
        {
            String theTxt;
            theTxt = this.getTxt();
            strategy.appendField(locator, this, "txt", buffer, theTxt);
        }
        {
            BigInteger theEncTxtLen;
            theEncTxtLen = this.getEncTxtLen();
            strategy.appendField(locator, this, "encTxtLen", buffer, theEncTxtLen);
        }
        {
            String theEncTxt;
            theEncTxt = this.getEncTxt();
            strategy.appendField(locator, this, "encTxt", buffer, theEncTxt);
        }
        {
            XMLGregorianCalendar theTxnTm;
            theTxnTm = this.getTxnTm();
            strategy.appendField(locator, this, "txnTm", buffer, theTxnTm);
        }
        {
            String theURL;
            theURL = this.getURL();
            strategy.appendField(locator, this, "url", buffer, theURL);
        }
        return buffer;
    }

}
