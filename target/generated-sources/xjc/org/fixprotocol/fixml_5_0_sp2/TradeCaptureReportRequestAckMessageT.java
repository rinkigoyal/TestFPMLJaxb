//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.14 at 04:50:28 PM SGT 
//


package org.fixprotocol.fixml_5_0_sp2;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * TradeCaptureReportRequestAck can be found in Volume 5 of the
 * 						specification
 * 
 * <p>Java class for TradeCaptureReportRequestAck_message_t complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TradeCaptureReportRequestAck_message_t"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.fixprotocol.org/FIXML-5-0-SP2}Abstract_message_t"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.fixprotocol.org/FIXML-5-0-SP2}TradeCaptureReportRequestAckElements"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attGroup ref="{http://www.fixprotocol.org/FIXML-5-0-SP2}TradeCaptureReportRequestAckAttributes"/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TradeCaptureReportRequestAck_message_t", propOrder = {
    "instrmt",
    "undly",
    "leg"
})
public class TradeCaptureReportRequestAckMessageT
    extends AbstractMessageT
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Instrmt")
    protected InstrumentBlockT instrmt;
    @XmlElement(name = "Undly")
    protected List<UndInstrmtGrpBlockT> undly;
    @XmlElement(name = "Leg")
    protected List<InstrmtLegGrpBlockT> leg;
    @XmlAttribute(name = "ReqID", required = true)
    protected String reqID;
    @XmlAttribute(name = "TrdID")
    protected String trdID;
    @XmlAttribute(name = "TrdID2")
    protected String trdID2;
    @XmlAttribute(name = "FirmTrdID")
    protected String firmTrdID;
    @XmlAttribute(name = "FirmTrdID2")
    protected String firmTrdID2;
    @XmlAttribute(name = "ReqTyp", required = true)
    protected BigInteger reqTyp;
    @XmlAttribute(name = "SubReqTyp")
    protected String subReqTyp;
    @XmlAttribute(name = "TotNumTrdRpts")
    protected BigInteger totNumTrdRpts;
    @XmlAttribute(name = "ReqRslt", required = true)
    protected String reqRslt;
    @XmlAttribute(name = "ReqStat", required = true)
    protected BigInteger reqStat;
    @XmlAttribute(name = "MLegRptTyp")
    protected String mLegRptTyp;
    @XmlAttribute(name = "RspTransportTyp")
    protected BigInteger rspTransportTyp;
    @XmlAttribute(name = "RspDest")
    protected String rspDest;
    @XmlAttribute(name = "Txt")
    protected String txt;
    @XmlAttribute(name = "EncTxtLen")
    protected BigInteger encTxtLen;
    @XmlAttribute(name = "EncTxt")
    protected String encTxt;
    @XmlAttribute(name = "MsgEvtSrc")
    protected String msgEvtSrc;

    /**
     * Gets the value of the instrmt property.
     * 
     * @return
     *     possible object is
     *     {@link InstrumentBlockT }
     *     
     */
    public InstrumentBlockT getInstrmt() {
        return instrmt;
    }

    /**
     * Sets the value of the instrmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link InstrumentBlockT }
     *     
     */
    public void setInstrmt(InstrumentBlockT value) {
        this.instrmt = value;
    }

    /**
     * Gets the value of the undly property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the undly property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUndly().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UndInstrmtGrpBlockT }
     * 
     * 
     */
    public List<UndInstrmtGrpBlockT> getUndly() {
        if (undly == null) {
            undly = new ArrayList<UndInstrmtGrpBlockT>();
        }
        return this.undly;
    }

    /**
     * Gets the value of the leg property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the leg property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLeg().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InstrmtLegGrpBlockT }
     * 
     * 
     */
    public List<InstrmtLegGrpBlockT> getLeg() {
        if (leg == null) {
            leg = new ArrayList<InstrmtLegGrpBlockT>();
        }
        return this.leg;
    }

    /**
     * Gets the value of the reqID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReqID() {
        return reqID;
    }

    /**
     * Sets the value of the reqID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReqID(String value) {
        this.reqID = value;
    }

    /**
     * Gets the value of the trdID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTrdID() {
        return trdID;
    }

    /**
     * Sets the value of the trdID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTrdID(String value) {
        this.trdID = value;
    }

    /**
     * Gets the value of the trdID2 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTrdID2() {
        return trdID2;
    }

    /**
     * Sets the value of the trdID2 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTrdID2(String value) {
        this.trdID2 = value;
    }

    /**
     * Gets the value of the firmTrdID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFirmTrdID() {
        return firmTrdID;
    }

    /**
     * Sets the value of the firmTrdID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFirmTrdID(String value) {
        this.firmTrdID = value;
    }

    /**
     * Gets the value of the firmTrdID2 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFirmTrdID2() {
        return firmTrdID2;
    }

    /**
     * Sets the value of the firmTrdID2 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFirmTrdID2(String value) {
        this.firmTrdID2 = value;
    }

    /**
     * Gets the value of the reqTyp property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getReqTyp() {
        return reqTyp;
    }

    /**
     * Sets the value of the reqTyp property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setReqTyp(BigInteger value) {
        this.reqTyp = value;
    }

    /**
     * Gets the value of the subReqTyp property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSubReqTyp() {
        return subReqTyp;
    }

    /**
     * Sets the value of the subReqTyp property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSubReqTyp(String value) {
        this.subReqTyp = value;
    }

    /**
     * Gets the value of the totNumTrdRpts property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getTotNumTrdRpts() {
        return totNumTrdRpts;
    }

    /**
     * Sets the value of the totNumTrdRpts property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setTotNumTrdRpts(BigInteger value) {
        this.totNumTrdRpts = value;
    }

    /**
     * Gets the value of the reqRslt property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReqRslt() {
        return reqRslt;
    }

    /**
     * Sets the value of the reqRslt property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReqRslt(String value) {
        this.reqRslt = value;
    }

    /**
     * Gets the value of the reqStat property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getReqStat() {
        return reqStat;
    }

    /**
     * Sets the value of the reqStat property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setReqStat(BigInteger value) {
        this.reqStat = value;
    }

    /**
     * Gets the value of the mLegRptTyp property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMLegRptTyp() {
        return mLegRptTyp;
    }

    /**
     * Sets the value of the mLegRptTyp property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMLegRptTyp(String value) {
        this.mLegRptTyp = value;
    }

    /**
     * Gets the value of the rspTransportTyp property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getRspTransportTyp() {
        return rspTransportTyp;
    }

    /**
     * Sets the value of the rspTransportTyp property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setRspTransportTyp(BigInteger value) {
        this.rspTransportTyp = value;
    }

    /**
     * Gets the value of the rspDest property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRspDest() {
        return rspDest;
    }

    /**
     * Sets the value of the rspDest property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRspDest(String value) {
        this.rspDest = value;
    }

    /**
     * Gets the value of the txt property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTxt() {
        return txt;
    }

    /**
     * Sets the value of the txt property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTxt(String value) {
        this.txt = value;
    }

    /**
     * Gets the value of the encTxtLen property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getEncTxtLen() {
        return encTxtLen;
    }

    /**
     * Sets the value of the encTxtLen property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setEncTxtLen(BigInteger value) {
        this.encTxtLen = value;
    }

    /**
     * Gets the value of the encTxt property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEncTxt() {
        return encTxt;
    }

    /**
     * Sets the value of the encTxt property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEncTxt(String value) {
        this.encTxt = value;
    }

    /**
     * Gets the value of the msgEvtSrc property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMsgEvtSrc() {
        return msgEvtSrc;
    }

    /**
     * Sets the value of the msgEvtSrc property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMsgEvtSrc(String value) {
        this.msgEvtSrc = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TradeCaptureReportRequestAckMessageT)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final TradeCaptureReportRequestAckMessageT that = ((TradeCaptureReportRequestAckMessageT) object);
        {
            InstrumentBlockT lhsInstrmt;
            lhsInstrmt = this.getInstrmt();
            InstrumentBlockT rhsInstrmt;
            rhsInstrmt = that.getInstrmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "instrmt", lhsInstrmt), LocatorUtils.property(thatLocator, "instrmt", rhsInstrmt), lhsInstrmt, rhsInstrmt)) {
                return false;
            }
        }
        {
            List<UndInstrmtGrpBlockT> lhsUndly;
            lhsUndly = (((this.undly!= null)&&(!this.undly.isEmpty()))?this.getUndly():null);
            List<UndInstrmtGrpBlockT> rhsUndly;
            rhsUndly = (((that.undly!= null)&&(!that.undly.isEmpty()))?that.getUndly():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "undly", lhsUndly), LocatorUtils.property(thatLocator, "undly", rhsUndly), lhsUndly, rhsUndly)) {
                return false;
            }
        }
        {
            List<InstrmtLegGrpBlockT> lhsLeg;
            lhsLeg = (((this.leg!= null)&&(!this.leg.isEmpty()))?this.getLeg():null);
            List<InstrmtLegGrpBlockT> rhsLeg;
            rhsLeg = (((that.leg!= null)&&(!that.leg.isEmpty()))?that.getLeg():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "leg", lhsLeg), LocatorUtils.property(thatLocator, "leg", rhsLeg), lhsLeg, rhsLeg)) {
                return false;
            }
        }
        {
            String lhsReqID;
            lhsReqID = this.getReqID();
            String rhsReqID;
            rhsReqID = that.getReqID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reqID", lhsReqID), LocatorUtils.property(thatLocator, "reqID", rhsReqID), lhsReqID, rhsReqID)) {
                return false;
            }
        }
        {
            String lhsTrdID;
            lhsTrdID = this.getTrdID();
            String rhsTrdID;
            rhsTrdID = that.getTrdID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "trdID", lhsTrdID), LocatorUtils.property(thatLocator, "trdID", rhsTrdID), lhsTrdID, rhsTrdID)) {
                return false;
            }
        }
        {
            String lhsTrdID2;
            lhsTrdID2 = this.getTrdID2();
            String rhsTrdID2;
            rhsTrdID2 = that.getTrdID2();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "trdID2", lhsTrdID2), LocatorUtils.property(thatLocator, "trdID2", rhsTrdID2), lhsTrdID2, rhsTrdID2)) {
                return false;
            }
        }
        {
            String lhsFirmTrdID;
            lhsFirmTrdID = this.getFirmTrdID();
            String rhsFirmTrdID;
            rhsFirmTrdID = that.getFirmTrdID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "firmTrdID", lhsFirmTrdID), LocatorUtils.property(thatLocator, "firmTrdID", rhsFirmTrdID), lhsFirmTrdID, rhsFirmTrdID)) {
                return false;
            }
        }
        {
            String lhsFirmTrdID2;
            lhsFirmTrdID2 = this.getFirmTrdID2();
            String rhsFirmTrdID2;
            rhsFirmTrdID2 = that.getFirmTrdID2();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "firmTrdID2", lhsFirmTrdID2), LocatorUtils.property(thatLocator, "firmTrdID2", rhsFirmTrdID2), lhsFirmTrdID2, rhsFirmTrdID2)) {
                return false;
            }
        }
        {
            BigInteger lhsReqTyp;
            lhsReqTyp = this.getReqTyp();
            BigInteger rhsReqTyp;
            rhsReqTyp = that.getReqTyp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reqTyp", lhsReqTyp), LocatorUtils.property(thatLocator, "reqTyp", rhsReqTyp), lhsReqTyp, rhsReqTyp)) {
                return false;
            }
        }
        {
            String lhsSubReqTyp;
            lhsSubReqTyp = this.getSubReqTyp();
            String rhsSubReqTyp;
            rhsSubReqTyp = that.getSubReqTyp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subReqTyp", lhsSubReqTyp), LocatorUtils.property(thatLocator, "subReqTyp", rhsSubReqTyp), lhsSubReqTyp, rhsSubReqTyp)) {
                return false;
            }
        }
        {
            BigInteger lhsTotNumTrdRpts;
            lhsTotNumTrdRpts = this.getTotNumTrdRpts();
            BigInteger rhsTotNumTrdRpts;
            rhsTotNumTrdRpts = that.getTotNumTrdRpts();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "totNumTrdRpts", lhsTotNumTrdRpts), LocatorUtils.property(thatLocator, "totNumTrdRpts", rhsTotNumTrdRpts), lhsTotNumTrdRpts, rhsTotNumTrdRpts)) {
                return false;
            }
        }
        {
            String lhsReqRslt;
            lhsReqRslt = this.getReqRslt();
            String rhsReqRslt;
            rhsReqRslt = that.getReqRslt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reqRslt", lhsReqRslt), LocatorUtils.property(thatLocator, "reqRslt", rhsReqRslt), lhsReqRslt, rhsReqRslt)) {
                return false;
            }
        }
        {
            BigInteger lhsReqStat;
            lhsReqStat = this.getReqStat();
            BigInteger rhsReqStat;
            rhsReqStat = that.getReqStat();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reqStat", lhsReqStat), LocatorUtils.property(thatLocator, "reqStat", rhsReqStat), lhsReqStat, rhsReqStat)) {
                return false;
            }
        }
        {
            String lhsMLegRptTyp;
            lhsMLegRptTyp = this.getMLegRptTyp();
            String rhsMLegRptTyp;
            rhsMLegRptTyp = that.getMLegRptTyp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mLegRptTyp", lhsMLegRptTyp), LocatorUtils.property(thatLocator, "mLegRptTyp", rhsMLegRptTyp), lhsMLegRptTyp, rhsMLegRptTyp)) {
                return false;
            }
        }
        {
            BigInteger lhsRspTransportTyp;
            lhsRspTransportTyp = this.getRspTransportTyp();
            BigInteger rhsRspTransportTyp;
            rhsRspTransportTyp = that.getRspTransportTyp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rspTransportTyp", lhsRspTransportTyp), LocatorUtils.property(thatLocator, "rspTransportTyp", rhsRspTransportTyp), lhsRspTransportTyp, rhsRspTransportTyp)) {
                return false;
            }
        }
        {
            String lhsRspDest;
            lhsRspDest = this.getRspDest();
            String rhsRspDest;
            rhsRspDest = that.getRspDest();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rspDest", lhsRspDest), LocatorUtils.property(thatLocator, "rspDest", rhsRspDest), lhsRspDest, rhsRspDest)) {
                return false;
            }
        }
        {
            String lhsTxt;
            lhsTxt = this.getTxt();
            String rhsTxt;
            rhsTxt = that.getTxt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "txt", lhsTxt), LocatorUtils.property(thatLocator, "txt", rhsTxt), lhsTxt, rhsTxt)) {
                return false;
            }
        }
        {
            BigInteger lhsEncTxtLen;
            lhsEncTxtLen = this.getEncTxtLen();
            BigInteger rhsEncTxtLen;
            rhsEncTxtLen = that.getEncTxtLen();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "encTxtLen", lhsEncTxtLen), LocatorUtils.property(thatLocator, "encTxtLen", rhsEncTxtLen), lhsEncTxtLen, rhsEncTxtLen)) {
                return false;
            }
        }
        {
            String lhsEncTxt;
            lhsEncTxt = this.getEncTxt();
            String rhsEncTxt;
            rhsEncTxt = that.getEncTxt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "encTxt", lhsEncTxt), LocatorUtils.property(thatLocator, "encTxt", rhsEncTxt), lhsEncTxt, rhsEncTxt)) {
                return false;
            }
        }
        {
            String lhsMsgEvtSrc;
            lhsMsgEvtSrc = this.getMsgEvtSrc();
            String rhsMsgEvtSrc;
            rhsMsgEvtSrc = that.getMsgEvtSrc();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "msgEvtSrc", lhsMsgEvtSrc), LocatorUtils.property(thatLocator, "msgEvtSrc", rhsMsgEvtSrc), lhsMsgEvtSrc, rhsMsgEvtSrc)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            InstrumentBlockT theInstrmt;
            theInstrmt = this.getInstrmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "instrmt", theInstrmt), currentHashCode, theInstrmt);
        }
        {
            List<UndInstrmtGrpBlockT> theUndly;
            theUndly = (((this.undly!= null)&&(!this.undly.isEmpty()))?this.getUndly():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "undly", theUndly), currentHashCode, theUndly);
        }
        {
            List<InstrmtLegGrpBlockT> theLeg;
            theLeg = (((this.leg!= null)&&(!this.leg.isEmpty()))?this.getLeg():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "leg", theLeg), currentHashCode, theLeg);
        }
        {
            String theReqID;
            theReqID = this.getReqID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reqID", theReqID), currentHashCode, theReqID);
        }
        {
            String theTrdID;
            theTrdID = this.getTrdID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "trdID", theTrdID), currentHashCode, theTrdID);
        }
        {
            String theTrdID2;
            theTrdID2 = this.getTrdID2();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "trdID2", theTrdID2), currentHashCode, theTrdID2);
        }
        {
            String theFirmTrdID;
            theFirmTrdID = this.getFirmTrdID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "firmTrdID", theFirmTrdID), currentHashCode, theFirmTrdID);
        }
        {
            String theFirmTrdID2;
            theFirmTrdID2 = this.getFirmTrdID2();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "firmTrdID2", theFirmTrdID2), currentHashCode, theFirmTrdID2);
        }
        {
            BigInteger theReqTyp;
            theReqTyp = this.getReqTyp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reqTyp", theReqTyp), currentHashCode, theReqTyp);
        }
        {
            String theSubReqTyp;
            theSubReqTyp = this.getSubReqTyp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subReqTyp", theSubReqTyp), currentHashCode, theSubReqTyp);
        }
        {
            BigInteger theTotNumTrdRpts;
            theTotNumTrdRpts = this.getTotNumTrdRpts();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "totNumTrdRpts", theTotNumTrdRpts), currentHashCode, theTotNumTrdRpts);
        }
        {
            String theReqRslt;
            theReqRslt = this.getReqRslt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reqRslt", theReqRslt), currentHashCode, theReqRslt);
        }
        {
            BigInteger theReqStat;
            theReqStat = this.getReqStat();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reqStat", theReqStat), currentHashCode, theReqStat);
        }
        {
            String theMLegRptTyp;
            theMLegRptTyp = this.getMLegRptTyp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mLegRptTyp", theMLegRptTyp), currentHashCode, theMLegRptTyp);
        }
        {
            BigInteger theRspTransportTyp;
            theRspTransportTyp = this.getRspTransportTyp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rspTransportTyp", theRspTransportTyp), currentHashCode, theRspTransportTyp);
        }
        {
            String theRspDest;
            theRspDest = this.getRspDest();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rspDest", theRspDest), currentHashCode, theRspDest);
        }
        {
            String theTxt;
            theTxt = this.getTxt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "txt", theTxt), currentHashCode, theTxt);
        }
        {
            BigInteger theEncTxtLen;
            theEncTxtLen = this.getEncTxtLen();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "encTxtLen", theEncTxtLen), currentHashCode, theEncTxtLen);
        }
        {
            String theEncTxt;
            theEncTxt = this.getEncTxt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "encTxt", theEncTxt), currentHashCode, theEncTxt);
        }
        {
            String theMsgEvtSrc;
            theMsgEvtSrc = this.getMsgEvtSrc();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "msgEvtSrc", theMsgEvtSrc), currentHashCode, theMsgEvtSrc);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            InstrumentBlockT theInstrmt;
            theInstrmt = this.getInstrmt();
            strategy.appendField(locator, this, "instrmt", buffer, theInstrmt);
        }
        {
            List<UndInstrmtGrpBlockT> theUndly;
            theUndly = (((this.undly!= null)&&(!this.undly.isEmpty()))?this.getUndly():null);
            strategy.appendField(locator, this, "undly", buffer, theUndly);
        }
        {
            List<InstrmtLegGrpBlockT> theLeg;
            theLeg = (((this.leg!= null)&&(!this.leg.isEmpty()))?this.getLeg():null);
            strategy.appendField(locator, this, "leg", buffer, theLeg);
        }
        {
            String theReqID;
            theReqID = this.getReqID();
            strategy.appendField(locator, this, "reqID", buffer, theReqID);
        }
        {
            String theTrdID;
            theTrdID = this.getTrdID();
            strategy.appendField(locator, this, "trdID", buffer, theTrdID);
        }
        {
            String theTrdID2;
            theTrdID2 = this.getTrdID2();
            strategy.appendField(locator, this, "trdID2", buffer, theTrdID2);
        }
        {
            String theFirmTrdID;
            theFirmTrdID = this.getFirmTrdID();
            strategy.appendField(locator, this, "firmTrdID", buffer, theFirmTrdID);
        }
        {
            String theFirmTrdID2;
            theFirmTrdID2 = this.getFirmTrdID2();
            strategy.appendField(locator, this, "firmTrdID2", buffer, theFirmTrdID2);
        }
        {
            BigInteger theReqTyp;
            theReqTyp = this.getReqTyp();
            strategy.appendField(locator, this, "reqTyp", buffer, theReqTyp);
        }
        {
            String theSubReqTyp;
            theSubReqTyp = this.getSubReqTyp();
            strategy.appendField(locator, this, "subReqTyp", buffer, theSubReqTyp);
        }
        {
            BigInteger theTotNumTrdRpts;
            theTotNumTrdRpts = this.getTotNumTrdRpts();
            strategy.appendField(locator, this, "totNumTrdRpts", buffer, theTotNumTrdRpts);
        }
        {
            String theReqRslt;
            theReqRslt = this.getReqRslt();
            strategy.appendField(locator, this, "reqRslt", buffer, theReqRslt);
        }
        {
            BigInteger theReqStat;
            theReqStat = this.getReqStat();
            strategy.appendField(locator, this, "reqStat", buffer, theReqStat);
        }
        {
            String theMLegRptTyp;
            theMLegRptTyp = this.getMLegRptTyp();
            strategy.appendField(locator, this, "mLegRptTyp", buffer, theMLegRptTyp);
        }
        {
            BigInteger theRspTransportTyp;
            theRspTransportTyp = this.getRspTransportTyp();
            strategy.appendField(locator, this, "rspTransportTyp", buffer, theRspTransportTyp);
        }
        {
            String theRspDest;
            theRspDest = this.getRspDest();
            strategy.appendField(locator, this, "rspDest", buffer, theRspDest);
        }
        {
            String theTxt;
            theTxt = this.getTxt();
            strategy.appendField(locator, this, "txt", buffer, theTxt);
        }
        {
            BigInteger theEncTxtLen;
            theEncTxtLen = this.getEncTxtLen();
            strategy.appendField(locator, this, "encTxtLen", buffer, theEncTxtLen);
        }
        {
            String theEncTxt;
            theEncTxt = this.getEncTxt();
            strategy.appendField(locator, this, "encTxt", buffer, theEncTxt);
        }
        {
            String theMsgEvtSrc;
            theMsgEvtSrc = this.getMsgEvtSrc();
            strategy.appendField(locator, this, "msgEvtSrc", buffer, theMsgEvtSrc);
        }
        return buffer;
    }

}
