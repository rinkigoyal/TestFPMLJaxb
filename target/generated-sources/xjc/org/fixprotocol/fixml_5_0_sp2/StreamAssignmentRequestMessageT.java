//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.14 at 04:50:28 PM SGT 
//


package org.fixprotocol.fixml_5_0_sp2;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * StreamAssignmentRequest can be found in Volume 3 of the
 * 						specification
 * 
 * <p>Java class for StreamAssignmentRequest_message_t complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="StreamAssignmentRequest_message_t"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.fixprotocol.org/FIXML-5-0-SP2}Abstract_message_t"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.fixprotocol.org/FIXML-5-0-SP2}StreamAssignmentRequestElements"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attGroup ref="{http://www.fixprotocol.org/FIXML-5-0-SP2}StreamAssignmentRequestAttributes"/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "StreamAssignmentRequest_message_t", propOrder = {
    "reqs"
})
public class StreamAssignmentRequestMessageT
    extends AbstractMessageT
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Reqs", required = true)
    protected List<StrmAsgnReqGrpBlockT> reqs;
    @XmlAttribute(name = "ReqID", required = true)
    protected String reqID;
    @XmlAttribute(name = "AsgnReqTyp", required = true)
    protected BigInteger asgnReqTyp;

    /**
     * Gets the value of the reqs property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the reqs property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getReqs().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link StrmAsgnReqGrpBlockT }
     * 
     * 
     */
    public List<StrmAsgnReqGrpBlockT> getReqs() {
        if (reqs == null) {
            reqs = new ArrayList<StrmAsgnReqGrpBlockT>();
        }
        return this.reqs;
    }

    /**
     * Gets the value of the reqID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReqID() {
        return reqID;
    }

    /**
     * Sets the value of the reqID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReqID(String value) {
        this.reqID = value;
    }

    /**
     * Gets the value of the asgnReqTyp property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getAsgnReqTyp() {
        return asgnReqTyp;
    }

    /**
     * Sets the value of the asgnReqTyp property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setAsgnReqTyp(BigInteger value) {
        this.asgnReqTyp = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof StreamAssignmentRequestMessageT)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final StreamAssignmentRequestMessageT that = ((StreamAssignmentRequestMessageT) object);
        {
            List<StrmAsgnReqGrpBlockT> lhsReqs;
            lhsReqs = (((this.reqs!= null)&&(!this.reqs.isEmpty()))?this.getReqs():null);
            List<StrmAsgnReqGrpBlockT> rhsReqs;
            rhsReqs = (((that.reqs!= null)&&(!that.reqs.isEmpty()))?that.getReqs():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reqs", lhsReqs), LocatorUtils.property(thatLocator, "reqs", rhsReqs), lhsReqs, rhsReqs)) {
                return false;
            }
        }
        {
            String lhsReqID;
            lhsReqID = this.getReqID();
            String rhsReqID;
            rhsReqID = that.getReqID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reqID", lhsReqID), LocatorUtils.property(thatLocator, "reqID", rhsReqID), lhsReqID, rhsReqID)) {
                return false;
            }
        }
        {
            BigInteger lhsAsgnReqTyp;
            lhsAsgnReqTyp = this.getAsgnReqTyp();
            BigInteger rhsAsgnReqTyp;
            rhsAsgnReqTyp = that.getAsgnReqTyp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "asgnReqTyp", lhsAsgnReqTyp), LocatorUtils.property(thatLocator, "asgnReqTyp", rhsAsgnReqTyp), lhsAsgnReqTyp, rhsAsgnReqTyp)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<StrmAsgnReqGrpBlockT> theReqs;
            theReqs = (((this.reqs!= null)&&(!this.reqs.isEmpty()))?this.getReqs():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reqs", theReqs), currentHashCode, theReqs);
        }
        {
            String theReqID;
            theReqID = this.getReqID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reqID", theReqID), currentHashCode, theReqID);
        }
        {
            BigInteger theAsgnReqTyp;
            theAsgnReqTyp = this.getAsgnReqTyp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "asgnReqTyp", theAsgnReqTyp), currentHashCode, theAsgnReqTyp);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            List<StrmAsgnReqGrpBlockT> theReqs;
            theReqs = (((this.reqs!= null)&&(!this.reqs.isEmpty()))?this.getReqs():null);
            strategy.appendField(locator, this, "reqs", buffer, theReqs);
        }
        {
            String theReqID;
            theReqID = this.getReqID();
            strategy.appendField(locator, this, "reqID", buffer, theReqID);
        }
        {
            BigInteger theAsgnReqTyp;
            theAsgnReqTyp = this.getAsgnReqTyp();
            strategy.appendField(locator, this, "asgnReqTyp", buffer, theAsgnReqTyp);
        }
        return buffer;
    }

}
