//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.17 at 02:08:33 AM SGT 
//


package org.fixprotocol.fixml_5_0_sp2;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Email can be found in Volume 3 of the
 * 						specification
 * 
 * <p>Java class for Email_message_t complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Email_message_t"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.fixprotocol.org/FIXML-5-0-SP2}Abstract_message_t"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.fixprotocol.org/FIXML-5-0-SP2}EmailElements"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attGroup ref="{http://www.fixprotocol.org/FIXML-5-0-SP2}EmailAttributes"/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Email_message_t", propOrder = {
    "rtg",
    "inst",
    "undly",
    "leg",
    "txtLn"
})
public class EmailMessageT
    extends AbstractMessageT
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Rtg")
    protected List<RoutingGrpBlockT> rtg;
    @XmlElement(name = "Inst")
    protected List<InstrmtGrpBlockT> inst;
    @XmlElement(name = "Undly")
    protected List<UndInstrmtGrpBlockT> undly;
    @XmlElement(name = "Leg")
    protected List<InstrmtLegGrpBlockT> leg;
    @XmlElement(name = "TxtLn", required = true)
    protected List<LinesOfTextGrpBlockT> txtLn;
    @XmlAttribute(name = "EmailThreadID", required = true)
    protected String emailThreadID;
    @XmlAttribute(name = "EmailTyp", required = true)
    protected String emailTyp;
    @XmlAttribute(name = "OrigTm")
    protected XMLGregorianCalendar origTm;
    @XmlAttribute(name = "Subject", required = true)
    protected String subject;
    @XmlAttribute(name = "EncSubjectLen")
    protected BigInteger encSubjectLen;
    @XmlAttribute(name = "EncSubject")
    protected String encSubject;
    @XmlAttribute(name = "OrdID")
    protected String ordID;
    @XmlAttribute(name = "ClOrdID")
    protected String clOrdID;
    @XmlAttribute(name = "RawDataLength")
    protected BigInteger rawDataLength;
    @XmlAttribute(name = "RawData")
    protected String rawData;

    /**
     * Gets the value of the rtg property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the rtg property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRtg().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RoutingGrpBlockT }
     * 
     * 
     */
    public List<RoutingGrpBlockT> getRtg() {
        if (rtg == null) {
            rtg = new ArrayList<RoutingGrpBlockT>();
        }
        return this.rtg;
    }

    /**
     * Gets the value of the inst property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the inst property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInst().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InstrmtGrpBlockT }
     * 
     * 
     */
    public List<InstrmtGrpBlockT> getInst() {
        if (inst == null) {
            inst = new ArrayList<InstrmtGrpBlockT>();
        }
        return this.inst;
    }

    /**
     * Gets the value of the undly property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the undly property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUndly().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UndInstrmtGrpBlockT }
     * 
     * 
     */
    public List<UndInstrmtGrpBlockT> getUndly() {
        if (undly == null) {
            undly = new ArrayList<UndInstrmtGrpBlockT>();
        }
        return this.undly;
    }

    /**
     * Gets the value of the leg property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the leg property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLeg().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InstrmtLegGrpBlockT }
     * 
     * 
     */
    public List<InstrmtLegGrpBlockT> getLeg() {
        if (leg == null) {
            leg = new ArrayList<InstrmtLegGrpBlockT>();
        }
        return this.leg;
    }

    /**
     * Gets the value of the txtLn property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the txtLn property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTxtLn().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LinesOfTextGrpBlockT }
     * 
     * 
     */
    public List<LinesOfTextGrpBlockT> getTxtLn() {
        if (txtLn == null) {
            txtLn = new ArrayList<LinesOfTextGrpBlockT>();
        }
        return this.txtLn;
    }

    /**
     * Gets the value of the emailThreadID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEmailThreadID() {
        return emailThreadID;
    }

    /**
     * Sets the value of the emailThreadID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEmailThreadID(String value) {
        this.emailThreadID = value;
    }

    /**
     * Gets the value of the emailTyp property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEmailTyp() {
        return emailTyp;
    }

    /**
     * Sets the value of the emailTyp property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEmailTyp(String value) {
        this.emailTyp = value;
    }

    /**
     * Gets the value of the origTm property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getOrigTm() {
        return origTm;
    }

    /**
     * Sets the value of the origTm property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setOrigTm(XMLGregorianCalendar value) {
        this.origTm = value;
    }

    /**
     * Gets the value of the subject property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSubject() {
        return subject;
    }

    /**
     * Sets the value of the subject property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSubject(String value) {
        this.subject = value;
    }

    /**
     * Gets the value of the encSubjectLen property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getEncSubjectLen() {
        return encSubjectLen;
    }

    /**
     * Sets the value of the encSubjectLen property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setEncSubjectLen(BigInteger value) {
        this.encSubjectLen = value;
    }

    /**
     * Gets the value of the encSubject property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEncSubject() {
        return encSubject;
    }

    /**
     * Sets the value of the encSubject property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEncSubject(String value) {
        this.encSubject = value;
    }

    /**
     * Gets the value of the ordID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOrdID() {
        return ordID;
    }

    /**
     * Sets the value of the ordID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOrdID(String value) {
        this.ordID = value;
    }

    /**
     * Gets the value of the clOrdID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getClOrdID() {
        return clOrdID;
    }

    /**
     * Sets the value of the clOrdID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setClOrdID(String value) {
        this.clOrdID = value;
    }

    /**
     * Gets the value of the rawDataLength property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getRawDataLength() {
        return rawDataLength;
    }

    /**
     * Sets the value of the rawDataLength property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setRawDataLength(BigInteger value) {
        this.rawDataLength = value;
    }

    /**
     * Gets the value of the rawData property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRawData() {
        return rawData;
    }

    /**
     * Sets the value of the rawData property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRawData(String value) {
        this.rawData = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof EmailMessageT)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final EmailMessageT that = ((EmailMessageT) object);
        {
            List<RoutingGrpBlockT> lhsRtg;
            lhsRtg = (((this.rtg!= null)&&(!this.rtg.isEmpty()))?this.getRtg():null);
            List<RoutingGrpBlockT> rhsRtg;
            rhsRtg = (((that.rtg!= null)&&(!that.rtg.isEmpty()))?that.getRtg():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rtg", lhsRtg), LocatorUtils.property(thatLocator, "rtg", rhsRtg), lhsRtg, rhsRtg)) {
                return false;
            }
        }
        {
            List<InstrmtGrpBlockT> lhsInst;
            lhsInst = (((this.inst!= null)&&(!this.inst.isEmpty()))?this.getInst():null);
            List<InstrmtGrpBlockT> rhsInst;
            rhsInst = (((that.inst!= null)&&(!that.inst.isEmpty()))?that.getInst():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inst", lhsInst), LocatorUtils.property(thatLocator, "inst", rhsInst), lhsInst, rhsInst)) {
                return false;
            }
        }
        {
            List<UndInstrmtGrpBlockT> lhsUndly;
            lhsUndly = (((this.undly!= null)&&(!this.undly.isEmpty()))?this.getUndly():null);
            List<UndInstrmtGrpBlockT> rhsUndly;
            rhsUndly = (((that.undly!= null)&&(!that.undly.isEmpty()))?that.getUndly():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "undly", lhsUndly), LocatorUtils.property(thatLocator, "undly", rhsUndly), lhsUndly, rhsUndly)) {
                return false;
            }
        }
        {
            List<InstrmtLegGrpBlockT> lhsLeg;
            lhsLeg = (((this.leg!= null)&&(!this.leg.isEmpty()))?this.getLeg():null);
            List<InstrmtLegGrpBlockT> rhsLeg;
            rhsLeg = (((that.leg!= null)&&(!that.leg.isEmpty()))?that.getLeg():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "leg", lhsLeg), LocatorUtils.property(thatLocator, "leg", rhsLeg), lhsLeg, rhsLeg)) {
                return false;
            }
        }
        {
            List<LinesOfTextGrpBlockT> lhsTxtLn;
            lhsTxtLn = (((this.txtLn!= null)&&(!this.txtLn.isEmpty()))?this.getTxtLn():null);
            List<LinesOfTextGrpBlockT> rhsTxtLn;
            rhsTxtLn = (((that.txtLn!= null)&&(!that.txtLn.isEmpty()))?that.getTxtLn():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "txtLn", lhsTxtLn), LocatorUtils.property(thatLocator, "txtLn", rhsTxtLn), lhsTxtLn, rhsTxtLn)) {
                return false;
            }
        }
        {
            String lhsEmailThreadID;
            lhsEmailThreadID = this.getEmailThreadID();
            String rhsEmailThreadID;
            rhsEmailThreadID = that.getEmailThreadID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "emailThreadID", lhsEmailThreadID), LocatorUtils.property(thatLocator, "emailThreadID", rhsEmailThreadID), lhsEmailThreadID, rhsEmailThreadID)) {
                return false;
            }
        }
        {
            String lhsEmailTyp;
            lhsEmailTyp = this.getEmailTyp();
            String rhsEmailTyp;
            rhsEmailTyp = that.getEmailTyp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "emailTyp", lhsEmailTyp), LocatorUtils.property(thatLocator, "emailTyp", rhsEmailTyp), lhsEmailTyp, rhsEmailTyp)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsOrigTm;
            lhsOrigTm = this.getOrigTm();
            XMLGregorianCalendar rhsOrigTm;
            rhsOrigTm = that.getOrigTm();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "origTm", lhsOrigTm), LocatorUtils.property(thatLocator, "origTm", rhsOrigTm), lhsOrigTm, rhsOrigTm)) {
                return false;
            }
        }
        {
            String lhsSubject;
            lhsSubject = this.getSubject();
            String rhsSubject;
            rhsSubject = that.getSubject();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subject", lhsSubject), LocatorUtils.property(thatLocator, "subject", rhsSubject), lhsSubject, rhsSubject)) {
                return false;
            }
        }
        {
            BigInteger lhsEncSubjectLen;
            lhsEncSubjectLen = this.getEncSubjectLen();
            BigInteger rhsEncSubjectLen;
            rhsEncSubjectLen = that.getEncSubjectLen();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "encSubjectLen", lhsEncSubjectLen), LocatorUtils.property(thatLocator, "encSubjectLen", rhsEncSubjectLen), lhsEncSubjectLen, rhsEncSubjectLen)) {
                return false;
            }
        }
        {
            String lhsEncSubject;
            lhsEncSubject = this.getEncSubject();
            String rhsEncSubject;
            rhsEncSubject = that.getEncSubject();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "encSubject", lhsEncSubject), LocatorUtils.property(thatLocator, "encSubject", rhsEncSubject), lhsEncSubject, rhsEncSubject)) {
                return false;
            }
        }
        {
            String lhsOrdID;
            lhsOrdID = this.getOrdID();
            String rhsOrdID;
            rhsOrdID = that.getOrdID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ordID", lhsOrdID), LocatorUtils.property(thatLocator, "ordID", rhsOrdID), lhsOrdID, rhsOrdID)) {
                return false;
            }
        }
        {
            String lhsClOrdID;
            lhsClOrdID = this.getClOrdID();
            String rhsClOrdID;
            rhsClOrdID = that.getClOrdID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "clOrdID", lhsClOrdID), LocatorUtils.property(thatLocator, "clOrdID", rhsClOrdID), lhsClOrdID, rhsClOrdID)) {
                return false;
            }
        }
        {
            BigInteger lhsRawDataLength;
            lhsRawDataLength = this.getRawDataLength();
            BigInteger rhsRawDataLength;
            rhsRawDataLength = that.getRawDataLength();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rawDataLength", lhsRawDataLength), LocatorUtils.property(thatLocator, "rawDataLength", rhsRawDataLength), lhsRawDataLength, rhsRawDataLength)) {
                return false;
            }
        }
        {
            String lhsRawData;
            lhsRawData = this.getRawData();
            String rhsRawData;
            rhsRawData = that.getRawData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rawData", lhsRawData), LocatorUtils.property(thatLocator, "rawData", rhsRawData), lhsRawData, rhsRawData)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<RoutingGrpBlockT> theRtg;
            theRtg = (((this.rtg!= null)&&(!this.rtg.isEmpty()))?this.getRtg():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rtg", theRtg), currentHashCode, theRtg);
        }
        {
            List<InstrmtGrpBlockT> theInst;
            theInst = (((this.inst!= null)&&(!this.inst.isEmpty()))?this.getInst():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inst", theInst), currentHashCode, theInst);
        }
        {
            List<UndInstrmtGrpBlockT> theUndly;
            theUndly = (((this.undly!= null)&&(!this.undly.isEmpty()))?this.getUndly():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "undly", theUndly), currentHashCode, theUndly);
        }
        {
            List<InstrmtLegGrpBlockT> theLeg;
            theLeg = (((this.leg!= null)&&(!this.leg.isEmpty()))?this.getLeg():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "leg", theLeg), currentHashCode, theLeg);
        }
        {
            List<LinesOfTextGrpBlockT> theTxtLn;
            theTxtLn = (((this.txtLn!= null)&&(!this.txtLn.isEmpty()))?this.getTxtLn():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "txtLn", theTxtLn), currentHashCode, theTxtLn);
        }
        {
            String theEmailThreadID;
            theEmailThreadID = this.getEmailThreadID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "emailThreadID", theEmailThreadID), currentHashCode, theEmailThreadID);
        }
        {
            String theEmailTyp;
            theEmailTyp = this.getEmailTyp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "emailTyp", theEmailTyp), currentHashCode, theEmailTyp);
        }
        {
            XMLGregorianCalendar theOrigTm;
            theOrigTm = this.getOrigTm();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "origTm", theOrigTm), currentHashCode, theOrigTm);
        }
        {
            String theSubject;
            theSubject = this.getSubject();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subject", theSubject), currentHashCode, theSubject);
        }
        {
            BigInteger theEncSubjectLen;
            theEncSubjectLen = this.getEncSubjectLen();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "encSubjectLen", theEncSubjectLen), currentHashCode, theEncSubjectLen);
        }
        {
            String theEncSubject;
            theEncSubject = this.getEncSubject();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "encSubject", theEncSubject), currentHashCode, theEncSubject);
        }
        {
            String theOrdID;
            theOrdID = this.getOrdID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ordID", theOrdID), currentHashCode, theOrdID);
        }
        {
            String theClOrdID;
            theClOrdID = this.getClOrdID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "clOrdID", theClOrdID), currentHashCode, theClOrdID);
        }
        {
            BigInteger theRawDataLength;
            theRawDataLength = this.getRawDataLength();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rawDataLength", theRawDataLength), currentHashCode, theRawDataLength);
        }
        {
            String theRawData;
            theRawData = this.getRawData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rawData", theRawData), currentHashCode, theRawData);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            List<RoutingGrpBlockT> theRtg;
            theRtg = (((this.rtg!= null)&&(!this.rtg.isEmpty()))?this.getRtg():null);
            strategy.appendField(locator, this, "rtg", buffer, theRtg);
        }
        {
            List<InstrmtGrpBlockT> theInst;
            theInst = (((this.inst!= null)&&(!this.inst.isEmpty()))?this.getInst():null);
            strategy.appendField(locator, this, "inst", buffer, theInst);
        }
        {
            List<UndInstrmtGrpBlockT> theUndly;
            theUndly = (((this.undly!= null)&&(!this.undly.isEmpty()))?this.getUndly():null);
            strategy.appendField(locator, this, "undly", buffer, theUndly);
        }
        {
            List<InstrmtLegGrpBlockT> theLeg;
            theLeg = (((this.leg!= null)&&(!this.leg.isEmpty()))?this.getLeg():null);
            strategy.appendField(locator, this, "leg", buffer, theLeg);
        }
        {
            List<LinesOfTextGrpBlockT> theTxtLn;
            theTxtLn = (((this.txtLn!= null)&&(!this.txtLn.isEmpty()))?this.getTxtLn():null);
            strategy.appendField(locator, this, "txtLn", buffer, theTxtLn);
        }
        {
            String theEmailThreadID;
            theEmailThreadID = this.getEmailThreadID();
            strategy.appendField(locator, this, "emailThreadID", buffer, theEmailThreadID);
        }
        {
            String theEmailTyp;
            theEmailTyp = this.getEmailTyp();
            strategy.appendField(locator, this, "emailTyp", buffer, theEmailTyp);
        }
        {
            XMLGregorianCalendar theOrigTm;
            theOrigTm = this.getOrigTm();
            strategy.appendField(locator, this, "origTm", buffer, theOrigTm);
        }
        {
            String theSubject;
            theSubject = this.getSubject();
            strategy.appendField(locator, this, "subject", buffer, theSubject);
        }
        {
            BigInteger theEncSubjectLen;
            theEncSubjectLen = this.getEncSubjectLen();
            strategy.appendField(locator, this, "encSubjectLen", buffer, theEncSubjectLen);
        }
        {
            String theEncSubject;
            theEncSubject = this.getEncSubject();
            strategy.appendField(locator, this, "encSubject", buffer, theEncSubject);
        }
        {
            String theOrdID;
            theOrdID = this.getOrdID();
            strategy.appendField(locator, this, "ordID", buffer, theOrdID);
        }
        {
            String theClOrdID;
            theClOrdID = this.getClOrdID();
            strategy.appendField(locator, this, "clOrdID", buffer, theClOrdID);
        }
        {
            BigInteger theRawDataLength;
            theRawDataLength = this.getRawDataLength();
            strategy.appendField(locator, this, "rawDataLength", buffer, theRawDataLength);
        }
        {
            String theRawData;
            theRawData = this.getRawData();
            strategy.appendField(locator, this, "rawData", buffer, theRawData);
        }
        return buffer;
    }

}
