//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.17 at 02:08:33 AM SGT 
//


package org.fixprotocol.fixml_5_0_sp2;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * MarketDataSnapshotFullRefresh can be found in Volume 3 of the
 * 						specification
 * 
 * <p>Java class for MarketDataSnapshotFullRefresh_message_t complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MarketDataSnapshotFullRefresh_message_t"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.fixprotocol.org/FIXML-5-0-SP2}Abstract_message_t"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.fixprotocol.org/FIXML-5-0-SP2}MarketDataSnapshotFullRefreshElements"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attGroup ref="{http://www.fixprotocol.org/FIXML-5-0-SP2}MarketDataSnapshotFullRefreshAttributes"/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MarketDataSnapshotFullRefresh_message_t", propOrder = {
    "applSeqCtrl",
    "instrmt",
    "undly",
    "leg",
    "full",
    "rtg"
})
public class MarketDataSnapshotFullRefreshMessageT
    extends AbstractMessageT
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "ApplSeqCtrl")
    protected ApplicationSequenceControlBlockT applSeqCtrl;
    @XmlElement(name = "Instrmt", required = true)
    protected InstrumentBlockT instrmt;
    @XmlElement(name = "Undly")
    protected List<UndInstrmtGrpBlockT> undly;
    @XmlElement(name = "Leg")
    protected List<InstrmtLegGrpBlockT> leg;
    @XmlElement(name = "Full", required = true)
    protected List<MDFullGrpBlockT> full;
    @XmlElement(name = "Rtg")
    protected List<RoutingGrpBlockT> rtg;
    @XmlAttribute(name = "TotNumRpts")
    protected BigInteger totNumRpts;
    @XmlAttribute(name = "RptID")
    protected BigInteger rptID;
    @XmlAttribute(name = "BizDt")
    protected XMLGregorianCalendar bizDt;
    @XmlAttribute(name = "MDBkTyp")
    protected BigInteger mdBkTyp;
    @XmlAttribute(name = "MDSubBkTyp")
    protected BigInteger mdSubBkTyp;
    @XmlAttribute(name = "MktDepth")
    protected BigInteger mktDepth;
    @XmlAttribute(name = "MDFeedTyp")
    protected String mdFeedTyp;
    @XmlAttribute(name = "RefInd")
    protected String refInd;
    @XmlAttribute(name = "TrdDt")
    protected XMLGregorianCalendar trdDt;
    @XmlAttribute(name = "ReqID")
    protected String reqID;
    @XmlAttribute(name = "MDStrmID")
    protected String mdStrmID;
    @XmlAttribute(name = "FinclStat")
    protected String finclStat;
    @XmlAttribute(name = "CorpActn")
    protected String corpActn;
    @XmlAttribute(name = "NetChgPrevDay")
    protected BigDecimal netChgPrevDay;
    @XmlAttribute(name = "ApplQuDepth")
    protected BigInteger applQuDepth;
    @XmlAttribute(name = "ApplQuResolution")
    protected BigInteger applQuResolution;

    /**
     * Gets the value of the applSeqCtrl property.
     * 
     * @return
     *     possible object is
     *     {@link ApplicationSequenceControlBlockT }
     *     
     */
    public ApplicationSequenceControlBlockT getApplSeqCtrl() {
        return applSeqCtrl;
    }

    /**
     * Sets the value of the applSeqCtrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link ApplicationSequenceControlBlockT }
     *     
     */
    public void setApplSeqCtrl(ApplicationSequenceControlBlockT value) {
        this.applSeqCtrl = value;
    }

    /**
     * Gets the value of the instrmt property.
     * 
     * @return
     *     possible object is
     *     {@link InstrumentBlockT }
     *     
     */
    public InstrumentBlockT getInstrmt() {
        return instrmt;
    }

    /**
     * Sets the value of the instrmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link InstrumentBlockT }
     *     
     */
    public void setInstrmt(InstrumentBlockT value) {
        this.instrmt = value;
    }

    /**
     * Gets the value of the undly property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the undly property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUndly().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UndInstrmtGrpBlockT }
     * 
     * 
     */
    public List<UndInstrmtGrpBlockT> getUndly() {
        if (undly == null) {
            undly = new ArrayList<UndInstrmtGrpBlockT>();
        }
        return this.undly;
    }

    /**
     * Gets the value of the leg property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the leg property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLeg().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InstrmtLegGrpBlockT }
     * 
     * 
     */
    public List<InstrmtLegGrpBlockT> getLeg() {
        if (leg == null) {
            leg = new ArrayList<InstrmtLegGrpBlockT>();
        }
        return this.leg;
    }

    /**
     * Gets the value of the full property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the full property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFull().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MDFullGrpBlockT }
     * 
     * 
     */
    public List<MDFullGrpBlockT> getFull() {
        if (full == null) {
            full = new ArrayList<MDFullGrpBlockT>();
        }
        return this.full;
    }

    /**
     * Gets the value of the rtg property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the rtg property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRtg().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RoutingGrpBlockT }
     * 
     * 
     */
    public List<RoutingGrpBlockT> getRtg() {
        if (rtg == null) {
            rtg = new ArrayList<RoutingGrpBlockT>();
        }
        return this.rtg;
    }

    /**
     * Gets the value of the totNumRpts property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getTotNumRpts() {
        return totNumRpts;
    }

    /**
     * Sets the value of the totNumRpts property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setTotNumRpts(BigInteger value) {
        this.totNumRpts = value;
    }

    /**
     * Gets the value of the rptID property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getRptID() {
        return rptID;
    }

    /**
     * Sets the value of the rptID property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setRptID(BigInteger value) {
        this.rptID = value;
    }

    /**
     * Gets the value of the bizDt property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getBizDt() {
        return bizDt;
    }

    /**
     * Sets the value of the bizDt property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setBizDt(XMLGregorianCalendar value) {
        this.bizDt = value;
    }

    /**
     * Gets the value of the mdBkTyp property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMDBkTyp() {
        return mdBkTyp;
    }

    /**
     * Sets the value of the mdBkTyp property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMDBkTyp(BigInteger value) {
        this.mdBkTyp = value;
    }

    /**
     * Gets the value of the mdSubBkTyp property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMDSubBkTyp() {
        return mdSubBkTyp;
    }

    /**
     * Sets the value of the mdSubBkTyp property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMDSubBkTyp(BigInteger value) {
        this.mdSubBkTyp = value;
    }

    /**
     * Gets the value of the mktDepth property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMktDepth() {
        return mktDepth;
    }

    /**
     * Sets the value of the mktDepth property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMktDepth(BigInteger value) {
        this.mktDepth = value;
    }

    /**
     * Gets the value of the mdFeedTyp property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMDFeedTyp() {
        return mdFeedTyp;
    }

    /**
     * Sets the value of the mdFeedTyp property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMDFeedTyp(String value) {
        this.mdFeedTyp = value;
    }

    /**
     * Gets the value of the refInd property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRefInd() {
        return refInd;
    }

    /**
     * Sets the value of the refInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRefInd(String value) {
        this.refInd = value;
    }

    /**
     * Gets the value of the trdDt property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getTrdDt() {
        return trdDt;
    }

    /**
     * Sets the value of the trdDt property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setTrdDt(XMLGregorianCalendar value) {
        this.trdDt = value;
    }

    /**
     * Gets the value of the reqID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReqID() {
        return reqID;
    }

    /**
     * Sets the value of the reqID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReqID(String value) {
        this.reqID = value;
    }

    /**
     * Gets the value of the mdStrmID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMDStrmID() {
        return mdStrmID;
    }

    /**
     * Sets the value of the mdStrmID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMDStrmID(String value) {
        this.mdStrmID = value;
    }

    /**
     * Gets the value of the finclStat property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFinclStat() {
        return finclStat;
    }

    /**
     * Sets the value of the finclStat property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFinclStat(String value) {
        this.finclStat = value;
    }

    /**
     * Gets the value of the corpActn property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCorpActn() {
        return corpActn;
    }

    /**
     * Sets the value of the corpActn property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCorpActn(String value) {
        this.corpActn = value;
    }

    /**
     * Gets the value of the netChgPrevDay property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getNetChgPrevDay() {
        return netChgPrevDay;
    }

    /**
     * Sets the value of the netChgPrevDay property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setNetChgPrevDay(BigDecimal value) {
        this.netChgPrevDay = value;
    }

    /**
     * Gets the value of the applQuDepth property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getApplQuDepth() {
        return applQuDepth;
    }

    /**
     * Sets the value of the applQuDepth property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setApplQuDepth(BigInteger value) {
        this.applQuDepth = value;
    }

    /**
     * Gets the value of the applQuResolution property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getApplQuResolution() {
        return applQuResolution;
    }

    /**
     * Sets the value of the applQuResolution property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setApplQuResolution(BigInteger value) {
        this.applQuResolution = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof MarketDataSnapshotFullRefreshMessageT)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final MarketDataSnapshotFullRefreshMessageT that = ((MarketDataSnapshotFullRefreshMessageT) object);
        {
            ApplicationSequenceControlBlockT lhsApplSeqCtrl;
            lhsApplSeqCtrl = this.getApplSeqCtrl();
            ApplicationSequenceControlBlockT rhsApplSeqCtrl;
            rhsApplSeqCtrl = that.getApplSeqCtrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "applSeqCtrl", lhsApplSeqCtrl), LocatorUtils.property(thatLocator, "applSeqCtrl", rhsApplSeqCtrl), lhsApplSeqCtrl, rhsApplSeqCtrl)) {
                return false;
            }
        }
        {
            InstrumentBlockT lhsInstrmt;
            lhsInstrmt = this.getInstrmt();
            InstrumentBlockT rhsInstrmt;
            rhsInstrmt = that.getInstrmt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "instrmt", lhsInstrmt), LocatorUtils.property(thatLocator, "instrmt", rhsInstrmt), lhsInstrmt, rhsInstrmt)) {
                return false;
            }
        }
        {
            List<UndInstrmtGrpBlockT> lhsUndly;
            lhsUndly = (((this.undly!= null)&&(!this.undly.isEmpty()))?this.getUndly():null);
            List<UndInstrmtGrpBlockT> rhsUndly;
            rhsUndly = (((that.undly!= null)&&(!that.undly.isEmpty()))?that.getUndly():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "undly", lhsUndly), LocatorUtils.property(thatLocator, "undly", rhsUndly), lhsUndly, rhsUndly)) {
                return false;
            }
        }
        {
            List<InstrmtLegGrpBlockT> lhsLeg;
            lhsLeg = (((this.leg!= null)&&(!this.leg.isEmpty()))?this.getLeg():null);
            List<InstrmtLegGrpBlockT> rhsLeg;
            rhsLeg = (((that.leg!= null)&&(!that.leg.isEmpty()))?that.getLeg():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "leg", lhsLeg), LocatorUtils.property(thatLocator, "leg", rhsLeg), lhsLeg, rhsLeg)) {
                return false;
            }
        }
        {
            List<MDFullGrpBlockT> lhsFull;
            lhsFull = (((this.full!= null)&&(!this.full.isEmpty()))?this.getFull():null);
            List<MDFullGrpBlockT> rhsFull;
            rhsFull = (((that.full!= null)&&(!that.full.isEmpty()))?that.getFull():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "full", lhsFull), LocatorUtils.property(thatLocator, "full", rhsFull), lhsFull, rhsFull)) {
                return false;
            }
        }
        {
            List<RoutingGrpBlockT> lhsRtg;
            lhsRtg = (((this.rtg!= null)&&(!this.rtg.isEmpty()))?this.getRtg():null);
            List<RoutingGrpBlockT> rhsRtg;
            rhsRtg = (((that.rtg!= null)&&(!that.rtg.isEmpty()))?that.getRtg():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rtg", lhsRtg), LocatorUtils.property(thatLocator, "rtg", rhsRtg), lhsRtg, rhsRtg)) {
                return false;
            }
        }
        {
            BigInteger lhsTotNumRpts;
            lhsTotNumRpts = this.getTotNumRpts();
            BigInteger rhsTotNumRpts;
            rhsTotNumRpts = that.getTotNumRpts();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "totNumRpts", lhsTotNumRpts), LocatorUtils.property(thatLocator, "totNumRpts", rhsTotNumRpts), lhsTotNumRpts, rhsTotNumRpts)) {
                return false;
            }
        }
        {
            BigInteger lhsRptID;
            lhsRptID = this.getRptID();
            BigInteger rhsRptID;
            rhsRptID = that.getRptID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rptID", lhsRptID), LocatorUtils.property(thatLocator, "rptID", rhsRptID), lhsRptID, rhsRptID)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsBizDt;
            lhsBizDt = this.getBizDt();
            XMLGregorianCalendar rhsBizDt;
            rhsBizDt = that.getBizDt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bizDt", lhsBizDt), LocatorUtils.property(thatLocator, "bizDt", rhsBizDt), lhsBizDt, rhsBizDt)) {
                return false;
            }
        }
        {
            BigInteger lhsMDBkTyp;
            lhsMDBkTyp = this.getMDBkTyp();
            BigInteger rhsMDBkTyp;
            rhsMDBkTyp = that.getMDBkTyp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mdBkTyp", lhsMDBkTyp), LocatorUtils.property(thatLocator, "mdBkTyp", rhsMDBkTyp), lhsMDBkTyp, rhsMDBkTyp)) {
                return false;
            }
        }
        {
            BigInteger lhsMDSubBkTyp;
            lhsMDSubBkTyp = this.getMDSubBkTyp();
            BigInteger rhsMDSubBkTyp;
            rhsMDSubBkTyp = that.getMDSubBkTyp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mdSubBkTyp", lhsMDSubBkTyp), LocatorUtils.property(thatLocator, "mdSubBkTyp", rhsMDSubBkTyp), lhsMDSubBkTyp, rhsMDSubBkTyp)) {
                return false;
            }
        }
        {
            BigInteger lhsMktDepth;
            lhsMktDepth = this.getMktDepth();
            BigInteger rhsMktDepth;
            rhsMktDepth = that.getMktDepth();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mktDepth", lhsMktDepth), LocatorUtils.property(thatLocator, "mktDepth", rhsMktDepth), lhsMktDepth, rhsMktDepth)) {
                return false;
            }
        }
        {
            String lhsMDFeedTyp;
            lhsMDFeedTyp = this.getMDFeedTyp();
            String rhsMDFeedTyp;
            rhsMDFeedTyp = that.getMDFeedTyp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mdFeedTyp", lhsMDFeedTyp), LocatorUtils.property(thatLocator, "mdFeedTyp", rhsMDFeedTyp), lhsMDFeedTyp, rhsMDFeedTyp)) {
                return false;
            }
        }
        {
            String lhsRefInd;
            lhsRefInd = this.getRefInd();
            String rhsRefInd;
            rhsRefInd = that.getRefInd();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "refInd", lhsRefInd), LocatorUtils.property(thatLocator, "refInd", rhsRefInd), lhsRefInd, rhsRefInd)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsTrdDt;
            lhsTrdDt = this.getTrdDt();
            XMLGregorianCalendar rhsTrdDt;
            rhsTrdDt = that.getTrdDt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "trdDt", lhsTrdDt), LocatorUtils.property(thatLocator, "trdDt", rhsTrdDt), lhsTrdDt, rhsTrdDt)) {
                return false;
            }
        }
        {
            String lhsReqID;
            lhsReqID = this.getReqID();
            String rhsReqID;
            rhsReqID = that.getReqID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reqID", lhsReqID), LocatorUtils.property(thatLocator, "reqID", rhsReqID), lhsReqID, rhsReqID)) {
                return false;
            }
        }
        {
            String lhsMDStrmID;
            lhsMDStrmID = this.getMDStrmID();
            String rhsMDStrmID;
            rhsMDStrmID = that.getMDStrmID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mdStrmID", lhsMDStrmID), LocatorUtils.property(thatLocator, "mdStrmID", rhsMDStrmID), lhsMDStrmID, rhsMDStrmID)) {
                return false;
            }
        }
        {
            String lhsFinclStat;
            lhsFinclStat = this.getFinclStat();
            String rhsFinclStat;
            rhsFinclStat = that.getFinclStat();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "finclStat", lhsFinclStat), LocatorUtils.property(thatLocator, "finclStat", rhsFinclStat), lhsFinclStat, rhsFinclStat)) {
                return false;
            }
        }
        {
            String lhsCorpActn;
            lhsCorpActn = this.getCorpActn();
            String rhsCorpActn;
            rhsCorpActn = that.getCorpActn();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "corpActn", lhsCorpActn), LocatorUtils.property(thatLocator, "corpActn", rhsCorpActn), lhsCorpActn, rhsCorpActn)) {
                return false;
            }
        }
        {
            BigDecimal lhsNetChgPrevDay;
            lhsNetChgPrevDay = this.getNetChgPrevDay();
            BigDecimal rhsNetChgPrevDay;
            rhsNetChgPrevDay = that.getNetChgPrevDay();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "netChgPrevDay", lhsNetChgPrevDay), LocatorUtils.property(thatLocator, "netChgPrevDay", rhsNetChgPrevDay), lhsNetChgPrevDay, rhsNetChgPrevDay)) {
                return false;
            }
        }
        {
            BigInteger lhsApplQuDepth;
            lhsApplQuDepth = this.getApplQuDepth();
            BigInteger rhsApplQuDepth;
            rhsApplQuDepth = that.getApplQuDepth();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "applQuDepth", lhsApplQuDepth), LocatorUtils.property(thatLocator, "applQuDepth", rhsApplQuDepth), lhsApplQuDepth, rhsApplQuDepth)) {
                return false;
            }
        }
        {
            BigInteger lhsApplQuResolution;
            lhsApplQuResolution = this.getApplQuResolution();
            BigInteger rhsApplQuResolution;
            rhsApplQuResolution = that.getApplQuResolution();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "applQuResolution", lhsApplQuResolution), LocatorUtils.property(thatLocator, "applQuResolution", rhsApplQuResolution), lhsApplQuResolution, rhsApplQuResolution)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            ApplicationSequenceControlBlockT theApplSeqCtrl;
            theApplSeqCtrl = this.getApplSeqCtrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "applSeqCtrl", theApplSeqCtrl), currentHashCode, theApplSeqCtrl);
        }
        {
            InstrumentBlockT theInstrmt;
            theInstrmt = this.getInstrmt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "instrmt", theInstrmt), currentHashCode, theInstrmt);
        }
        {
            List<UndInstrmtGrpBlockT> theUndly;
            theUndly = (((this.undly!= null)&&(!this.undly.isEmpty()))?this.getUndly():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "undly", theUndly), currentHashCode, theUndly);
        }
        {
            List<InstrmtLegGrpBlockT> theLeg;
            theLeg = (((this.leg!= null)&&(!this.leg.isEmpty()))?this.getLeg():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "leg", theLeg), currentHashCode, theLeg);
        }
        {
            List<MDFullGrpBlockT> theFull;
            theFull = (((this.full!= null)&&(!this.full.isEmpty()))?this.getFull():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "full", theFull), currentHashCode, theFull);
        }
        {
            List<RoutingGrpBlockT> theRtg;
            theRtg = (((this.rtg!= null)&&(!this.rtg.isEmpty()))?this.getRtg():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rtg", theRtg), currentHashCode, theRtg);
        }
        {
            BigInteger theTotNumRpts;
            theTotNumRpts = this.getTotNumRpts();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "totNumRpts", theTotNumRpts), currentHashCode, theTotNumRpts);
        }
        {
            BigInteger theRptID;
            theRptID = this.getRptID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rptID", theRptID), currentHashCode, theRptID);
        }
        {
            XMLGregorianCalendar theBizDt;
            theBizDt = this.getBizDt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bizDt", theBizDt), currentHashCode, theBizDt);
        }
        {
            BigInteger theMDBkTyp;
            theMDBkTyp = this.getMDBkTyp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mdBkTyp", theMDBkTyp), currentHashCode, theMDBkTyp);
        }
        {
            BigInteger theMDSubBkTyp;
            theMDSubBkTyp = this.getMDSubBkTyp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mdSubBkTyp", theMDSubBkTyp), currentHashCode, theMDSubBkTyp);
        }
        {
            BigInteger theMktDepth;
            theMktDepth = this.getMktDepth();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mktDepth", theMktDepth), currentHashCode, theMktDepth);
        }
        {
            String theMDFeedTyp;
            theMDFeedTyp = this.getMDFeedTyp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mdFeedTyp", theMDFeedTyp), currentHashCode, theMDFeedTyp);
        }
        {
            String theRefInd;
            theRefInd = this.getRefInd();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refInd", theRefInd), currentHashCode, theRefInd);
        }
        {
            XMLGregorianCalendar theTrdDt;
            theTrdDt = this.getTrdDt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "trdDt", theTrdDt), currentHashCode, theTrdDt);
        }
        {
            String theReqID;
            theReqID = this.getReqID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reqID", theReqID), currentHashCode, theReqID);
        }
        {
            String theMDStrmID;
            theMDStrmID = this.getMDStrmID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mdStrmID", theMDStrmID), currentHashCode, theMDStrmID);
        }
        {
            String theFinclStat;
            theFinclStat = this.getFinclStat();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "finclStat", theFinclStat), currentHashCode, theFinclStat);
        }
        {
            String theCorpActn;
            theCorpActn = this.getCorpActn();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "corpActn", theCorpActn), currentHashCode, theCorpActn);
        }
        {
            BigDecimal theNetChgPrevDay;
            theNetChgPrevDay = this.getNetChgPrevDay();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "netChgPrevDay", theNetChgPrevDay), currentHashCode, theNetChgPrevDay);
        }
        {
            BigInteger theApplQuDepth;
            theApplQuDepth = this.getApplQuDepth();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "applQuDepth", theApplQuDepth), currentHashCode, theApplQuDepth);
        }
        {
            BigInteger theApplQuResolution;
            theApplQuResolution = this.getApplQuResolution();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "applQuResolution", theApplQuResolution), currentHashCode, theApplQuResolution);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            ApplicationSequenceControlBlockT theApplSeqCtrl;
            theApplSeqCtrl = this.getApplSeqCtrl();
            strategy.appendField(locator, this, "applSeqCtrl", buffer, theApplSeqCtrl);
        }
        {
            InstrumentBlockT theInstrmt;
            theInstrmt = this.getInstrmt();
            strategy.appendField(locator, this, "instrmt", buffer, theInstrmt);
        }
        {
            List<UndInstrmtGrpBlockT> theUndly;
            theUndly = (((this.undly!= null)&&(!this.undly.isEmpty()))?this.getUndly():null);
            strategy.appendField(locator, this, "undly", buffer, theUndly);
        }
        {
            List<InstrmtLegGrpBlockT> theLeg;
            theLeg = (((this.leg!= null)&&(!this.leg.isEmpty()))?this.getLeg():null);
            strategy.appendField(locator, this, "leg", buffer, theLeg);
        }
        {
            List<MDFullGrpBlockT> theFull;
            theFull = (((this.full!= null)&&(!this.full.isEmpty()))?this.getFull():null);
            strategy.appendField(locator, this, "full", buffer, theFull);
        }
        {
            List<RoutingGrpBlockT> theRtg;
            theRtg = (((this.rtg!= null)&&(!this.rtg.isEmpty()))?this.getRtg():null);
            strategy.appendField(locator, this, "rtg", buffer, theRtg);
        }
        {
            BigInteger theTotNumRpts;
            theTotNumRpts = this.getTotNumRpts();
            strategy.appendField(locator, this, "totNumRpts", buffer, theTotNumRpts);
        }
        {
            BigInteger theRptID;
            theRptID = this.getRptID();
            strategy.appendField(locator, this, "rptID", buffer, theRptID);
        }
        {
            XMLGregorianCalendar theBizDt;
            theBizDt = this.getBizDt();
            strategy.appendField(locator, this, "bizDt", buffer, theBizDt);
        }
        {
            BigInteger theMDBkTyp;
            theMDBkTyp = this.getMDBkTyp();
            strategy.appendField(locator, this, "mdBkTyp", buffer, theMDBkTyp);
        }
        {
            BigInteger theMDSubBkTyp;
            theMDSubBkTyp = this.getMDSubBkTyp();
            strategy.appendField(locator, this, "mdSubBkTyp", buffer, theMDSubBkTyp);
        }
        {
            BigInteger theMktDepth;
            theMktDepth = this.getMktDepth();
            strategy.appendField(locator, this, "mktDepth", buffer, theMktDepth);
        }
        {
            String theMDFeedTyp;
            theMDFeedTyp = this.getMDFeedTyp();
            strategy.appendField(locator, this, "mdFeedTyp", buffer, theMDFeedTyp);
        }
        {
            String theRefInd;
            theRefInd = this.getRefInd();
            strategy.appendField(locator, this, "refInd", buffer, theRefInd);
        }
        {
            XMLGregorianCalendar theTrdDt;
            theTrdDt = this.getTrdDt();
            strategy.appendField(locator, this, "trdDt", buffer, theTrdDt);
        }
        {
            String theReqID;
            theReqID = this.getReqID();
            strategy.appendField(locator, this, "reqID", buffer, theReqID);
        }
        {
            String theMDStrmID;
            theMDStrmID = this.getMDStrmID();
            strategy.appendField(locator, this, "mdStrmID", buffer, theMDStrmID);
        }
        {
            String theFinclStat;
            theFinclStat = this.getFinclStat();
            strategy.appendField(locator, this, "finclStat", buffer, theFinclStat);
        }
        {
            String theCorpActn;
            theCorpActn = this.getCorpActn();
            strategy.appendField(locator, this, "corpActn", buffer, theCorpActn);
        }
        {
            BigDecimal theNetChgPrevDay;
            theNetChgPrevDay = this.getNetChgPrevDay();
            strategy.appendField(locator, this, "netChgPrevDay", buffer, theNetChgPrevDay);
        }
        {
            BigInteger theApplQuDepth;
            theApplQuDepth = this.getApplQuDepth();
            strategy.appendField(locator, this, "applQuDepth", buffer, theApplQuDepth);
        }
        {
            BigInteger theApplQuResolution;
            theApplQuResolution = this.getApplQuResolution();
            strategy.appendField(locator, this, "applQuResolution", buffer, theApplQuResolution);
        }
        return buffer;
    }

}
