//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.14 at 04:50:28 PM SGT 
//


package org.fixprotocol.fixml_5_0_sp2;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * DerivativeSecurityListUpdateReport can be found in Volume 3 of the
 * 						specification
 * 
 * <p>Java class for DerivativeSecurityListUpdateReport_message_t complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DerivativeSecurityListUpdateReport_message_t"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.fixprotocol.org/FIXML-5-0-SP2}Abstract_message_t"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.fixprotocol.org/FIXML-5-0-SP2}DerivativeSecurityListUpdateReportElements"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attGroup ref="{http://www.fixprotocol.org/FIXML-5-0-SP2}DerivativeSecurityListUpdateReportAttributes"/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DerivativeSecurityListUpdateReport_message_t", propOrder = {
    "applSeqCtrl",
    "undly",
    "derivSecDef",
    "relSym"
})
public class DerivativeSecurityListUpdateReportMessageT
    extends AbstractMessageT
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "ApplSeqCtrl")
    protected ApplicationSequenceControlBlockT applSeqCtrl;
    @XmlElement(name = "Undly")
    protected UnderlyingInstrumentBlockT undly;
    @XmlElement(name = "DerivSecDef")
    protected DerivativeSecurityDefinitionBlockT derivSecDef;
    @XmlElement(name = "RelSym")
    protected List<RelSymDerivSecUpdGrpBlockT> relSym;
    @XmlAttribute(name = "ReqID")
    protected String reqID;
    @XmlAttribute(name = "RspID")
    protected String rspID;
    @XmlAttribute(name = "ReqRslt")
    protected BigInteger reqRslt;
    @XmlAttribute(name = "UpdActn")
    protected SecurityUpdateActionEnumT updActn;
    @XmlAttribute(name = "TxnTm")
    protected XMLGregorianCalendar txnTm;
    @XmlAttribute(name = "TotNoReltdSym")
    protected BigInteger totNoReltdSym;
    @XmlAttribute(name = "LastFragment")
    protected LastFragmentEnumT lastFragment;

    /**
     * Gets the value of the applSeqCtrl property.
     * 
     * @return
     *     possible object is
     *     {@link ApplicationSequenceControlBlockT }
     *     
     */
    public ApplicationSequenceControlBlockT getApplSeqCtrl() {
        return applSeqCtrl;
    }

    /**
     * Sets the value of the applSeqCtrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link ApplicationSequenceControlBlockT }
     *     
     */
    public void setApplSeqCtrl(ApplicationSequenceControlBlockT value) {
        this.applSeqCtrl = value;
    }

    /**
     * Gets the value of the undly property.
     * 
     * @return
     *     possible object is
     *     {@link UnderlyingInstrumentBlockT }
     *     
     */
    public UnderlyingInstrumentBlockT getUndly() {
        return undly;
    }

    /**
     * Sets the value of the undly property.
     * 
     * @param value
     *     allowed object is
     *     {@link UnderlyingInstrumentBlockT }
     *     
     */
    public void setUndly(UnderlyingInstrumentBlockT value) {
        this.undly = value;
    }

    /**
     * Gets the value of the derivSecDef property.
     * 
     * @return
     *     possible object is
     *     {@link DerivativeSecurityDefinitionBlockT }
     *     
     */
    public DerivativeSecurityDefinitionBlockT getDerivSecDef() {
        return derivSecDef;
    }

    /**
     * Sets the value of the derivSecDef property.
     * 
     * @param value
     *     allowed object is
     *     {@link DerivativeSecurityDefinitionBlockT }
     *     
     */
    public void setDerivSecDef(DerivativeSecurityDefinitionBlockT value) {
        this.derivSecDef = value;
    }

    /**
     * Gets the value of the relSym property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the relSym property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRelSym().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RelSymDerivSecUpdGrpBlockT }
     * 
     * 
     */
    public List<RelSymDerivSecUpdGrpBlockT> getRelSym() {
        if (relSym == null) {
            relSym = new ArrayList<RelSymDerivSecUpdGrpBlockT>();
        }
        return this.relSym;
    }

    /**
     * Gets the value of the reqID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReqID() {
        return reqID;
    }

    /**
     * Sets the value of the reqID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReqID(String value) {
        this.reqID = value;
    }

    /**
     * Gets the value of the rspID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRspID() {
        return rspID;
    }

    /**
     * Sets the value of the rspID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRspID(String value) {
        this.rspID = value;
    }

    /**
     * Gets the value of the reqRslt property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getReqRslt() {
        return reqRslt;
    }

    /**
     * Sets the value of the reqRslt property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setReqRslt(BigInteger value) {
        this.reqRslt = value;
    }

    /**
     * Gets the value of the updActn property.
     * 
     * @return
     *     possible object is
     *     {@link SecurityUpdateActionEnumT }
     *     
     */
    public SecurityUpdateActionEnumT getUpdActn() {
        return updActn;
    }

    /**
     * Sets the value of the updActn property.
     * 
     * @param value
     *     allowed object is
     *     {@link SecurityUpdateActionEnumT }
     *     
     */
    public void setUpdActn(SecurityUpdateActionEnumT value) {
        this.updActn = value;
    }

    /**
     * Gets the value of the txnTm property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getTxnTm() {
        return txnTm;
    }

    /**
     * Sets the value of the txnTm property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setTxnTm(XMLGregorianCalendar value) {
        this.txnTm = value;
    }

    /**
     * Gets the value of the totNoReltdSym property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getTotNoReltdSym() {
        return totNoReltdSym;
    }

    /**
     * Sets the value of the totNoReltdSym property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setTotNoReltdSym(BigInteger value) {
        this.totNoReltdSym = value;
    }

    /**
     * Gets the value of the lastFragment property.
     * 
     * @return
     *     possible object is
     *     {@link LastFragmentEnumT }
     *     
     */
    public LastFragmentEnumT getLastFragment() {
        return lastFragment;
    }

    /**
     * Sets the value of the lastFragment property.
     * 
     * @param value
     *     allowed object is
     *     {@link LastFragmentEnumT }
     *     
     */
    public void setLastFragment(LastFragmentEnumT value) {
        this.lastFragment = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof DerivativeSecurityListUpdateReportMessageT)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final DerivativeSecurityListUpdateReportMessageT that = ((DerivativeSecurityListUpdateReportMessageT) object);
        {
            ApplicationSequenceControlBlockT lhsApplSeqCtrl;
            lhsApplSeqCtrl = this.getApplSeqCtrl();
            ApplicationSequenceControlBlockT rhsApplSeqCtrl;
            rhsApplSeqCtrl = that.getApplSeqCtrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "applSeqCtrl", lhsApplSeqCtrl), LocatorUtils.property(thatLocator, "applSeqCtrl", rhsApplSeqCtrl), lhsApplSeqCtrl, rhsApplSeqCtrl)) {
                return false;
            }
        }
        {
            UnderlyingInstrumentBlockT lhsUndly;
            lhsUndly = this.getUndly();
            UnderlyingInstrumentBlockT rhsUndly;
            rhsUndly = that.getUndly();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "undly", lhsUndly), LocatorUtils.property(thatLocator, "undly", rhsUndly), lhsUndly, rhsUndly)) {
                return false;
            }
        }
        {
            DerivativeSecurityDefinitionBlockT lhsDerivSecDef;
            lhsDerivSecDef = this.getDerivSecDef();
            DerivativeSecurityDefinitionBlockT rhsDerivSecDef;
            rhsDerivSecDef = that.getDerivSecDef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "derivSecDef", lhsDerivSecDef), LocatorUtils.property(thatLocator, "derivSecDef", rhsDerivSecDef), lhsDerivSecDef, rhsDerivSecDef)) {
                return false;
            }
        }
        {
            List<RelSymDerivSecUpdGrpBlockT> lhsRelSym;
            lhsRelSym = (((this.relSym!= null)&&(!this.relSym.isEmpty()))?this.getRelSym():null);
            List<RelSymDerivSecUpdGrpBlockT> rhsRelSym;
            rhsRelSym = (((that.relSym!= null)&&(!that.relSym.isEmpty()))?that.getRelSym():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "relSym", lhsRelSym), LocatorUtils.property(thatLocator, "relSym", rhsRelSym), lhsRelSym, rhsRelSym)) {
                return false;
            }
        }
        {
            String lhsReqID;
            lhsReqID = this.getReqID();
            String rhsReqID;
            rhsReqID = that.getReqID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reqID", lhsReqID), LocatorUtils.property(thatLocator, "reqID", rhsReqID), lhsReqID, rhsReqID)) {
                return false;
            }
        }
        {
            String lhsRspID;
            lhsRspID = this.getRspID();
            String rhsRspID;
            rhsRspID = that.getRspID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rspID", lhsRspID), LocatorUtils.property(thatLocator, "rspID", rhsRspID), lhsRspID, rhsRspID)) {
                return false;
            }
        }
        {
            BigInteger lhsReqRslt;
            lhsReqRslt = this.getReqRslt();
            BigInteger rhsReqRslt;
            rhsReqRslt = that.getReqRslt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reqRslt", lhsReqRslt), LocatorUtils.property(thatLocator, "reqRslt", rhsReqRslt), lhsReqRslt, rhsReqRslt)) {
                return false;
            }
        }
        {
            SecurityUpdateActionEnumT lhsUpdActn;
            lhsUpdActn = this.getUpdActn();
            SecurityUpdateActionEnumT rhsUpdActn;
            rhsUpdActn = that.getUpdActn();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "updActn", lhsUpdActn), LocatorUtils.property(thatLocator, "updActn", rhsUpdActn), lhsUpdActn, rhsUpdActn)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsTxnTm;
            lhsTxnTm = this.getTxnTm();
            XMLGregorianCalendar rhsTxnTm;
            rhsTxnTm = that.getTxnTm();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "txnTm", lhsTxnTm), LocatorUtils.property(thatLocator, "txnTm", rhsTxnTm), lhsTxnTm, rhsTxnTm)) {
                return false;
            }
        }
        {
            BigInteger lhsTotNoReltdSym;
            lhsTotNoReltdSym = this.getTotNoReltdSym();
            BigInteger rhsTotNoReltdSym;
            rhsTotNoReltdSym = that.getTotNoReltdSym();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "totNoReltdSym", lhsTotNoReltdSym), LocatorUtils.property(thatLocator, "totNoReltdSym", rhsTotNoReltdSym), lhsTotNoReltdSym, rhsTotNoReltdSym)) {
                return false;
            }
        }
        {
            LastFragmentEnumT lhsLastFragment;
            lhsLastFragment = this.getLastFragment();
            LastFragmentEnumT rhsLastFragment;
            rhsLastFragment = that.getLastFragment();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastFragment", lhsLastFragment), LocatorUtils.property(thatLocator, "lastFragment", rhsLastFragment), lhsLastFragment, rhsLastFragment)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            ApplicationSequenceControlBlockT theApplSeqCtrl;
            theApplSeqCtrl = this.getApplSeqCtrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "applSeqCtrl", theApplSeqCtrl), currentHashCode, theApplSeqCtrl);
        }
        {
            UnderlyingInstrumentBlockT theUndly;
            theUndly = this.getUndly();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "undly", theUndly), currentHashCode, theUndly);
        }
        {
            DerivativeSecurityDefinitionBlockT theDerivSecDef;
            theDerivSecDef = this.getDerivSecDef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "derivSecDef", theDerivSecDef), currentHashCode, theDerivSecDef);
        }
        {
            List<RelSymDerivSecUpdGrpBlockT> theRelSym;
            theRelSym = (((this.relSym!= null)&&(!this.relSym.isEmpty()))?this.getRelSym():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "relSym", theRelSym), currentHashCode, theRelSym);
        }
        {
            String theReqID;
            theReqID = this.getReqID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reqID", theReqID), currentHashCode, theReqID);
        }
        {
            String theRspID;
            theRspID = this.getRspID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rspID", theRspID), currentHashCode, theRspID);
        }
        {
            BigInteger theReqRslt;
            theReqRslt = this.getReqRslt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reqRslt", theReqRslt), currentHashCode, theReqRslt);
        }
        {
            SecurityUpdateActionEnumT theUpdActn;
            theUpdActn = this.getUpdActn();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "updActn", theUpdActn), currentHashCode, theUpdActn);
        }
        {
            XMLGregorianCalendar theTxnTm;
            theTxnTm = this.getTxnTm();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "txnTm", theTxnTm), currentHashCode, theTxnTm);
        }
        {
            BigInteger theTotNoReltdSym;
            theTotNoReltdSym = this.getTotNoReltdSym();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "totNoReltdSym", theTotNoReltdSym), currentHashCode, theTotNoReltdSym);
        }
        {
            LastFragmentEnumT theLastFragment;
            theLastFragment = this.getLastFragment();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastFragment", theLastFragment), currentHashCode, theLastFragment);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            ApplicationSequenceControlBlockT theApplSeqCtrl;
            theApplSeqCtrl = this.getApplSeqCtrl();
            strategy.appendField(locator, this, "applSeqCtrl", buffer, theApplSeqCtrl);
        }
        {
            UnderlyingInstrumentBlockT theUndly;
            theUndly = this.getUndly();
            strategy.appendField(locator, this, "undly", buffer, theUndly);
        }
        {
            DerivativeSecurityDefinitionBlockT theDerivSecDef;
            theDerivSecDef = this.getDerivSecDef();
            strategy.appendField(locator, this, "derivSecDef", buffer, theDerivSecDef);
        }
        {
            List<RelSymDerivSecUpdGrpBlockT> theRelSym;
            theRelSym = (((this.relSym!= null)&&(!this.relSym.isEmpty()))?this.getRelSym():null);
            strategy.appendField(locator, this, "relSym", buffer, theRelSym);
        }
        {
            String theReqID;
            theReqID = this.getReqID();
            strategy.appendField(locator, this, "reqID", buffer, theReqID);
        }
        {
            String theRspID;
            theRspID = this.getRspID();
            strategy.appendField(locator, this, "rspID", buffer, theRspID);
        }
        {
            BigInteger theReqRslt;
            theReqRslt = this.getReqRslt();
            strategy.appendField(locator, this, "reqRslt", buffer, theReqRslt);
        }
        {
            SecurityUpdateActionEnumT theUpdActn;
            theUpdActn = this.getUpdActn();
            strategy.appendField(locator, this, "updActn", buffer, theUpdActn);
        }
        {
            XMLGregorianCalendar theTxnTm;
            theTxnTm = this.getTxnTm();
            strategy.appendField(locator, this, "txnTm", buffer, theTxnTm);
        }
        {
            BigInteger theTotNoReltdSym;
            theTotNoReltdSym = this.getTotNoReltdSym();
            strategy.appendField(locator, this, "totNoReltdSym", buffer, theTotNoReltdSym);
        }
        {
            LastFragmentEnumT theLastFragment;
            theLastFragment = this.getLastFragment();
            strategy.appendField(locator, this, "lastFragment", buffer, theLastFragment);
        }
        return buffer;
    }

}
