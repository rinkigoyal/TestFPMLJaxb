//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.14 at 04:50:28 PM SGT 
//


package org.fixprotocol.fixml_5_0_sp2;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * News can be found in Volume 3 of the
 * 						specification
 * 
 * <p>Java class for News_message_t complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="News_message_t"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.fixprotocol.org/FIXML-5-0-SP2}Abstract_message_t"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.fixprotocol.org/FIXML-5-0-SP2}NewsElements"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attGroup ref="{http://www.fixprotocol.org/FIXML-5-0-SP2}NewsAttributes"/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "News_message_t", propOrder = {
    "applSeqCtrl",
    "refs",
    "rtg",
    "inst",
    "leg",
    "undly",
    "txtLn"
})
public class NewsMessageT
    extends AbstractMessageT
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "ApplSeqCtrl")
    protected ApplicationSequenceControlBlockT applSeqCtrl;
    @XmlElement(name = "Refs")
    protected List<NewsRefGrpBlockT> refs;
    @XmlElement(name = "Rtg")
    protected List<RoutingGrpBlockT> rtg;
    @XmlElement(name = "Inst")
    protected List<InstrmtGrpBlockT> inst;
    @XmlElement(name = "Leg")
    protected List<InstrmtLegGrpBlockT> leg;
    @XmlElement(name = "Undly")
    protected List<UndInstrmtGrpBlockT> undly;
    @XmlElement(name = "TxtLn", required = true)
    protected List<LinesOfTextGrpBlockT> txtLn;
    @XmlAttribute(name = "ID")
    protected String id;
    @XmlAttribute(name = "NewsCatgy")
    protected String newsCatgy;
    @XmlAttribute(name = "LangCd")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String langCd;
    @XmlAttribute(name = "OrigTm")
    protected XMLGregorianCalendar origTm;
    @XmlAttribute(name = "Urgency")
    protected String urgency;
    @XmlAttribute(name = "Headline", required = true)
    protected String headline;
    @XmlAttribute(name = "EncHeadlineLen")
    protected BigInteger encHeadlineLen;
    @XmlAttribute(name = "EncHeadline")
    protected String encHeadline;
    @XmlAttribute(name = "MktID")
    protected String mktID;
    @XmlAttribute(name = "MktSegID")
    protected String mktSegID;
    @XmlAttribute(name = "URL")
    protected String url;
    @XmlAttribute(name = "RawDataLength")
    protected BigInteger rawDataLength;
    @XmlAttribute(name = "RawData")
    protected String rawData;

    /**
     * Gets the value of the applSeqCtrl property.
     * 
     * @return
     *     possible object is
     *     {@link ApplicationSequenceControlBlockT }
     *     
     */
    public ApplicationSequenceControlBlockT getApplSeqCtrl() {
        return applSeqCtrl;
    }

    /**
     * Sets the value of the applSeqCtrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link ApplicationSequenceControlBlockT }
     *     
     */
    public void setApplSeqCtrl(ApplicationSequenceControlBlockT value) {
        this.applSeqCtrl = value;
    }

    /**
     * Gets the value of the refs property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the refs property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRefs().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NewsRefGrpBlockT }
     * 
     * 
     */
    public List<NewsRefGrpBlockT> getRefs() {
        if (refs == null) {
            refs = new ArrayList<NewsRefGrpBlockT>();
        }
        return this.refs;
    }

    /**
     * Gets the value of the rtg property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the rtg property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRtg().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RoutingGrpBlockT }
     * 
     * 
     */
    public List<RoutingGrpBlockT> getRtg() {
        if (rtg == null) {
            rtg = new ArrayList<RoutingGrpBlockT>();
        }
        return this.rtg;
    }

    /**
     * Gets the value of the inst property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the inst property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInst().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InstrmtGrpBlockT }
     * 
     * 
     */
    public List<InstrmtGrpBlockT> getInst() {
        if (inst == null) {
            inst = new ArrayList<InstrmtGrpBlockT>();
        }
        return this.inst;
    }

    /**
     * Gets the value of the leg property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the leg property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLeg().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InstrmtLegGrpBlockT }
     * 
     * 
     */
    public List<InstrmtLegGrpBlockT> getLeg() {
        if (leg == null) {
            leg = new ArrayList<InstrmtLegGrpBlockT>();
        }
        return this.leg;
    }

    /**
     * Gets the value of the undly property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the undly property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUndly().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UndInstrmtGrpBlockT }
     * 
     * 
     */
    public List<UndInstrmtGrpBlockT> getUndly() {
        if (undly == null) {
            undly = new ArrayList<UndInstrmtGrpBlockT>();
        }
        return this.undly;
    }

    /**
     * Gets the value of the txtLn property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the txtLn property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTxtLn().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LinesOfTextGrpBlockT }
     * 
     * 
     */
    public List<LinesOfTextGrpBlockT> getTxtLn() {
        if (txtLn == null) {
            txtLn = new ArrayList<LinesOfTextGrpBlockT>();
        }
        return this.txtLn;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getID() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setID(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the newsCatgy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNewsCatgy() {
        return newsCatgy;
    }

    /**
     * Sets the value of the newsCatgy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNewsCatgy(String value) {
        this.newsCatgy = value;
    }

    /**
     * Gets the value of the langCd property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLangCd() {
        return langCd;
    }

    /**
     * Sets the value of the langCd property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLangCd(String value) {
        this.langCd = value;
    }

    /**
     * Gets the value of the origTm property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getOrigTm() {
        return origTm;
    }

    /**
     * Sets the value of the origTm property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setOrigTm(XMLGregorianCalendar value) {
        this.origTm = value;
    }

    /**
     * Gets the value of the urgency property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUrgency() {
        return urgency;
    }

    /**
     * Sets the value of the urgency property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUrgency(String value) {
        this.urgency = value;
    }

    /**
     * Gets the value of the headline property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHeadline() {
        return headline;
    }

    /**
     * Sets the value of the headline property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHeadline(String value) {
        this.headline = value;
    }

    /**
     * Gets the value of the encHeadlineLen property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getEncHeadlineLen() {
        return encHeadlineLen;
    }

    /**
     * Sets the value of the encHeadlineLen property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setEncHeadlineLen(BigInteger value) {
        this.encHeadlineLen = value;
    }

    /**
     * Gets the value of the encHeadline property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEncHeadline() {
        return encHeadline;
    }

    /**
     * Sets the value of the encHeadline property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEncHeadline(String value) {
        this.encHeadline = value;
    }

    /**
     * Gets the value of the mktID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMktID() {
        return mktID;
    }

    /**
     * Sets the value of the mktID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMktID(String value) {
        this.mktID = value;
    }

    /**
     * Gets the value of the mktSegID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMktSegID() {
        return mktSegID;
    }

    /**
     * Sets the value of the mktSegID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMktSegID(String value) {
        this.mktSegID = value;
    }

    /**
     * Gets the value of the url property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getURL() {
        return url;
    }

    /**
     * Sets the value of the url property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setURL(String value) {
        this.url = value;
    }

    /**
     * Gets the value of the rawDataLength property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getRawDataLength() {
        return rawDataLength;
    }

    /**
     * Sets the value of the rawDataLength property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setRawDataLength(BigInteger value) {
        this.rawDataLength = value;
    }

    /**
     * Gets the value of the rawData property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRawData() {
        return rawData;
    }

    /**
     * Sets the value of the rawData property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRawData(String value) {
        this.rawData = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof NewsMessageT)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final NewsMessageT that = ((NewsMessageT) object);
        {
            ApplicationSequenceControlBlockT lhsApplSeqCtrl;
            lhsApplSeqCtrl = this.getApplSeqCtrl();
            ApplicationSequenceControlBlockT rhsApplSeqCtrl;
            rhsApplSeqCtrl = that.getApplSeqCtrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "applSeqCtrl", lhsApplSeqCtrl), LocatorUtils.property(thatLocator, "applSeqCtrl", rhsApplSeqCtrl), lhsApplSeqCtrl, rhsApplSeqCtrl)) {
                return false;
            }
        }
        {
            List<NewsRefGrpBlockT> lhsRefs;
            lhsRefs = (((this.refs!= null)&&(!this.refs.isEmpty()))?this.getRefs():null);
            List<NewsRefGrpBlockT> rhsRefs;
            rhsRefs = (((that.refs!= null)&&(!that.refs.isEmpty()))?that.getRefs():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "refs", lhsRefs), LocatorUtils.property(thatLocator, "refs", rhsRefs), lhsRefs, rhsRefs)) {
                return false;
            }
        }
        {
            List<RoutingGrpBlockT> lhsRtg;
            lhsRtg = (((this.rtg!= null)&&(!this.rtg.isEmpty()))?this.getRtg():null);
            List<RoutingGrpBlockT> rhsRtg;
            rhsRtg = (((that.rtg!= null)&&(!that.rtg.isEmpty()))?that.getRtg():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rtg", lhsRtg), LocatorUtils.property(thatLocator, "rtg", rhsRtg), lhsRtg, rhsRtg)) {
                return false;
            }
        }
        {
            List<InstrmtGrpBlockT> lhsInst;
            lhsInst = (((this.inst!= null)&&(!this.inst.isEmpty()))?this.getInst():null);
            List<InstrmtGrpBlockT> rhsInst;
            rhsInst = (((that.inst!= null)&&(!that.inst.isEmpty()))?that.getInst():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inst", lhsInst), LocatorUtils.property(thatLocator, "inst", rhsInst), lhsInst, rhsInst)) {
                return false;
            }
        }
        {
            List<InstrmtLegGrpBlockT> lhsLeg;
            lhsLeg = (((this.leg!= null)&&(!this.leg.isEmpty()))?this.getLeg():null);
            List<InstrmtLegGrpBlockT> rhsLeg;
            rhsLeg = (((that.leg!= null)&&(!that.leg.isEmpty()))?that.getLeg():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "leg", lhsLeg), LocatorUtils.property(thatLocator, "leg", rhsLeg), lhsLeg, rhsLeg)) {
                return false;
            }
        }
        {
            List<UndInstrmtGrpBlockT> lhsUndly;
            lhsUndly = (((this.undly!= null)&&(!this.undly.isEmpty()))?this.getUndly():null);
            List<UndInstrmtGrpBlockT> rhsUndly;
            rhsUndly = (((that.undly!= null)&&(!that.undly.isEmpty()))?that.getUndly():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "undly", lhsUndly), LocatorUtils.property(thatLocator, "undly", rhsUndly), lhsUndly, rhsUndly)) {
                return false;
            }
        }
        {
            List<LinesOfTextGrpBlockT> lhsTxtLn;
            lhsTxtLn = (((this.txtLn!= null)&&(!this.txtLn.isEmpty()))?this.getTxtLn():null);
            List<LinesOfTextGrpBlockT> rhsTxtLn;
            rhsTxtLn = (((that.txtLn!= null)&&(!that.txtLn.isEmpty()))?that.getTxtLn():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "txtLn", lhsTxtLn), LocatorUtils.property(thatLocator, "txtLn", rhsTxtLn), lhsTxtLn, rhsTxtLn)) {
                return false;
            }
        }
        {
            String lhsID;
            lhsID = this.getID();
            String rhsID;
            rhsID = that.getID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsID), LocatorUtils.property(thatLocator, "id", rhsID), lhsID, rhsID)) {
                return false;
            }
        }
        {
            String lhsNewsCatgy;
            lhsNewsCatgy = this.getNewsCatgy();
            String rhsNewsCatgy;
            rhsNewsCatgy = that.getNewsCatgy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "newsCatgy", lhsNewsCatgy), LocatorUtils.property(thatLocator, "newsCatgy", rhsNewsCatgy), lhsNewsCatgy, rhsNewsCatgy)) {
                return false;
            }
        }
        {
            String lhsLangCd;
            lhsLangCd = this.getLangCd();
            String rhsLangCd;
            rhsLangCd = that.getLangCd();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "langCd", lhsLangCd), LocatorUtils.property(thatLocator, "langCd", rhsLangCd), lhsLangCd, rhsLangCd)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsOrigTm;
            lhsOrigTm = this.getOrigTm();
            XMLGregorianCalendar rhsOrigTm;
            rhsOrigTm = that.getOrigTm();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "origTm", lhsOrigTm), LocatorUtils.property(thatLocator, "origTm", rhsOrigTm), lhsOrigTm, rhsOrigTm)) {
                return false;
            }
        }
        {
            String lhsUrgency;
            lhsUrgency = this.getUrgency();
            String rhsUrgency;
            rhsUrgency = that.getUrgency();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "urgency", lhsUrgency), LocatorUtils.property(thatLocator, "urgency", rhsUrgency), lhsUrgency, rhsUrgency)) {
                return false;
            }
        }
        {
            String lhsHeadline;
            lhsHeadline = this.getHeadline();
            String rhsHeadline;
            rhsHeadline = that.getHeadline();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "headline", lhsHeadline), LocatorUtils.property(thatLocator, "headline", rhsHeadline), lhsHeadline, rhsHeadline)) {
                return false;
            }
        }
        {
            BigInteger lhsEncHeadlineLen;
            lhsEncHeadlineLen = this.getEncHeadlineLen();
            BigInteger rhsEncHeadlineLen;
            rhsEncHeadlineLen = that.getEncHeadlineLen();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "encHeadlineLen", lhsEncHeadlineLen), LocatorUtils.property(thatLocator, "encHeadlineLen", rhsEncHeadlineLen), lhsEncHeadlineLen, rhsEncHeadlineLen)) {
                return false;
            }
        }
        {
            String lhsEncHeadline;
            lhsEncHeadline = this.getEncHeadline();
            String rhsEncHeadline;
            rhsEncHeadline = that.getEncHeadline();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "encHeadline", lhsEncHeadline), LocatorUtils.property(thatLocator, "encHeadline", rhsEncHeadline), lhsEncHeadline, rhsEncHeadline)) {
                return false;
            }
        }
        {
            String lhsMktID;
            lhsMktID = this.getMktID();
            String rhsMktID;
            rhsMktID = that.getMktID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mktID", lhsMktID), LocatorUtils.property(thatLocator, "mktID", rhsMktID), lhsMktID, rhsMktID)) {
                return false;
            }
        }
        {
            String lhsMktSegID;
            lhsMktSegID = this.getMktSegID();
            String rhsMktSegID;
            rhsMktSegID = that.getMktSegID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mktSegID", lhsMktSegID), LocatorUtils.property(thatLocator, "mktSegID", rhsMktSegID), lhsMktSegID, rhsMktSegID)) {
                return false;
            }
        }
        {
            String lhsURL;
            lhsURL = this.getURL();
            String rhsURL;
            rhsURL = that.getURL();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "url", lhsURL), LocatorUtils.property(thatLocator, "url", rhsURL), lhsURL, rhsURL)) {
                return false;
            }
        }
        {
            BigInteger lhsRawDataLength;
            lhsRawDataLength = this.getRawDataLength();
            BigInteger rhsRawDataLength;
            rhsRawDataLength = that.getRawDataLength();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rawDataLength", lhsRawDataLength), LocatorUtils.property(thatLocator, "rawDataLength", rhsRawDataLength), lhsRawDataLength, rhsRawDataLength)) {
                return false;
            }
        }
        {
            String lhsRawData;
            lhsRawData = this.getRawData();
            String rhsRawData;
            rhsRawData = that.getRawData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rawData", lhsRawData), LocatorUtils.property(thatLocator, "rawData", rhsRawData), lhsRawData, rhsRawData)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            ApplicationSequenceControlBlockT theApplSeqCtrl;
            theApplSeqCtrl = this.getApplSeqCtrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "applSeqCtrl", theApplSeqCtrl), currentHashCode, theApplSeqCtrl);
        }
        {
            List<NewsRefGrpBlockT> theRefs;
            theRefs = (((this.refs!= null)&&(!this.refs.isEmpty()))?this.getRefs():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "refs", theRefs), currentHashCode, theRefs);
        }
        {
            List<RoutingGrpBlockT> theRtg;
            theRtg = (((this.rtg!= null)&&(!this.rtg.isEmpty()))?this.getRtg():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rtg", theRtg), currentHashCode, theRtg);
        }
        {
            List<InstrmtGrpBlockT> theInst;
            theInst = (((this.inst!= null)&&(!this.inst.isEmpty()))?this.getInst():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inst", theInst), currentHashCode, theInst);
        }
        {
            List<InstrmtLegGrpBlockT> theLeg;
            theLeg = (((this.leg!= null)&&(!this.leg.isEmpty()))?this.getLeg():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "leg", theLeg), currentHashCode, theLeg);
        }
        {
            List<UndInstrmtGrpBlockT> theUndly;
            theUndly = (((this.undly!= null)&&(!this.undly.isEmpty()))?this.getUndly():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "undly", theUndly), currentHashCode, theUndly);
        }
        {
            List<LinesOfTextGrpBlockT> theTxtLn;
            theTxtLn = (((this.txtLn!= null)&&(!this.txtLn.isEmpty()))?this.getTxtLn():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "txtLn", theTxtLn), currentHashCode, theTxtLn);
        }
        {
            String theID;
            theID = this.getID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theID), currentHashCode, theID);
        }
        {
            String theNewsCatgy;
            theNewsCatgy = this.getNewsCatgy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "newsCatgy", theNewsCatgy), currentHashCode, theNewsCatgy);
        }
        {
            String theLangCd;
            theLangCd = this.getLangCd();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "langCd", theLangCd), currentHashCode, theLangCd);
        }
        {
            XMLGregorianCalendar theOrigTm;
            theOrigTm = this.getOrigTm();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "origTm", theOrigTm), currentHashCode, theOrigTm);
        }
        {
            String theUrgency;
            theUrgency = this.getUrgency();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "urgency", theUrgency), currentHashCode, theUrgency);
        }
        {
            String theHeadline;
            theHeadline = this.getHeadline();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "headline", theHeadline), currentHashCode, theHeadline);
        }
        {
            BigInteger theEncHeadlineLen;
            theEncHeadlineLen = this.getEncHeadlineLen();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "encHeadlineLen", theEncHeadlineLen), currentHashCode, theEncHeadlineLen);
        }
        {
            String theEncHeadline;
            theEncHeadline = this.getEncHeadline();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "encHeadline", theEncHeadline), currentHashCode, theEncHeadline);
        }
        {
            String theMktID;
            theMktID = this.getMktID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mktID", theMktID), currentHashCode, theMktID);
        }
        {
            String theMktSegID;
            theMktSegID = this.getMktSegID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mktSegID", theMktSegID), currentHashCode, theMktSegID);
        }
        {
            String theURL;
            theURL = this.getURL();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "url", theURL), currentHashCode, theURL);
        }
        {
            BigInteger theRawDataLength;
            theRawDataLength = this.getRawDataLength();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rawDataLength", theRawDataLength), currentHashCode, theRawDataLength);
        }
        {
            String theRawData;
            theRawData = this.getRawData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rawData", theRawData), currentHashCode, theRawData);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            ApplicationSequenceControlBlockT theApplSeqCtrl;
            theApplSeqCtrl = this.getApplSeqCtrl();
            strategy.appendField(locator, this, "applSeqCtrl", buffer, theApplSeqCtrl);
        }
        {
            List<NewsRefGrpBlockT> theRefs;
            theRefs = (((this.refs!= null)&&(!this.refs.isEmpty()))?this.getRefs():null);
            strategy.appendField(locator, this, "refs", buffer, theRefs);
        }
        {
            List<RoutingGrpBlockT> theRtg;
            theRtg = (((this.rtg!= null)&&(!this.rtg.isEmpty()))?this.getRtg():null);
            strategy.appendField(locator, this, "rtg", buffer, theRtg);
        }
        {
            List<InstrmtGrpBlockT> theInst;
            theInst = (((this.inst!= null)&&(!this.inst.isEmpty()))?this.getInst():null);
            strategy.appendField(locator, this, "inst", buffer, theInst);
        }
        {
            List<InstrmtLegGrpBlockT> theLeg;
            theLeg = (((this.leg!= null)&&(!this.leg.isEmpty()))?this.getLeg():null);
            strategy.appendField(locator, this, "leg", buffer, theLeg);
        }
        {
            List<UndInstrmtGrpBlockT> theUndly;
            theUndly = (((this.undly!= null)&&(!this.undly.isEmpty()))?this.getUndly():null);
            strategy.appendField(locator, this, "undly", buffer, theUndly);
        }
        {
            List<LinesOfTextGrpBlockT> theTxtLn;
            theTxtLn = (((this.txtLn!= null)&&(!this.txtLn.isEmpty()))?this.getTxtLn():null);
            strategy.appendField(locator, this, "txtLn", buffer, theTxtLn);
        }
        {
            String theID;
            theID = this.getID();
            strategy.appendField(locator, this, "id", buffer, theID);
        }
        {
            String theNewsCatgy;
            theNewsCatgy = this.getNewsCatgy();
            strategy.appendField(locator, this, "newsCatgy", buffer, theNewsCatgy);
        }
        {
            String theLangCd;
            theLangCd = this.getLangCd();
            strategy.appendField(locator, this, "langCd", buffer, theLangCd);
        }
        {
            XMLGregorianCalendar theOrigTm;
            theOrigTm = this.getOrigTm();
            strategy.appendField(locator, this, "origTm", buffer, theOrigTm);
        }
        {
            String theUrgency;
            theUrgency = this.getUrgency();
            strategy.appendField(locator, this, "urgency", buffer, theUrgency);
        }
        {
            String theHeadline;
            theHeadline = this.getHeadline();
            strategy.appendField(locator, this, "headline", buffer, theHeadline);
        }
        {
            BigInteger theEncHeadlineLen;
            theEncHeadlineLen = this.getEncHeadlineLen();
            strategy.appendField(locator, this, "encHeadlineLen", buffer, theEncHeadlineLen);
        }
        {
            String theEncHeadline;
            theEncHeadline = this.getEncHeadline();
            strategy.appendField(locator, this, "encHeadline", buffer, theEncHeadline);
        }
        {
            String theMktID;
            theMktID = this.getMktID();
            strategy.appendField(locator, this, "mktID", buffer, theMktID);
        }
        {
            String theMktSegID;
            theMktSegID = this.getMktSegID();
            strategy.appendField(locator, this, "mktSegID", buffer, theMktSegID);
        }
        {
            String theURL;
            theURL = this.getURL();
            strategy.appendField(locator, this, "url", buffer, theURL);
        }
        {
            BigInteger theRawDataLength;
            theRawDataLength = this.getRawDataLength();
            strategy.appendField(locator, this, "rawDataLength", buffer, theRawDataLength);
        }
        {
            String theRawData;
            theRawData = this.getRawData();
            strategy.appendField(locator, this, "rawData", buffer, theRawData);
        }
        return buffer;
    }

}
